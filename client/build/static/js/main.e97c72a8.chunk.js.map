{"version":3,"sources":["components/Footer/Footer.jsx","components/Navbars/NavbarLinks.jsx","components/Sidebar/Sidebar.jsx","redux/constants/fetch/admin/admin.constants.js","redux/constants/fetch/admin/event.admin.constants.js","redux/constants/fetch/user/event.user.constants.js","redux/constants/fetch/index.constants.js","redux/constants/layout/layout.constants.js","redux/constants/index.constants.js","redux/actions/index.actions.js","redux/actions/fetch/admin/admin.actions.js","components/Header/Header.jsx","components/Placeholder/EventPlaceholder.jsx","redux/actions/fetch/user/event.user.action.js","views/Home.jsx","redux/actions/fetch/admin/event.admin.action.js","views/Events.jsx","views/Login.jsx","routes.js","layouts/index.jsx","redux/actions/layout/layout.action.js","redux/middlewares/autoLogout.js","redux/middlewares/syncAuthState.js","redux/middlewares/index.js","redux/reducers/fetch/admin/admin.reducer.js","redux/reducers/fetch/admin/event.admin.reducer.js","redux/reducers/fetch/admin/index.admin.reducer.js","redux/reducers/fetch/user/event.user.reducer.js","redux/reducers/fetch/user/index.user.reducer.js","redux/reducers/fetch/index.fetch.reducer.js","redux/reducers/layout/layout.reducer.js","redux/reducers/index.reducer.js","index.js","redux/store/index.js","assets/img/sidebar-1.jpg","assets/img/logo.png","variables/Variables.jsx"],"names":["Footer","className","Container","fluid","Date","getFullYear","href","Component","NavbarLinks","this","props","onLogout","loading","Nav","NavItem","eventKey","size","pullRight","to","onClick","e","preventDefault","connect","state","dispatch","Sidebar","width","window","innerWidth","routeName","location","pathname","indexOf","setState","updateDimensions","addEventListener","bind","image","id","data-color","color","data-image","src","logo","alt","routes","map","prop","key","redirect","upgrade","activeRoute","layout","path","activeClassName","icon","name","AdminContants","createAdmin","SET_REQUEST_PARAMS","LOADING","LOADED","LOAD_SUCCESS","LOAD_FAILED","CLEAR_RESPONSE_MESSAGE","loginAdmin","getAdmin","logoutAdmin","AdminEventContants","createEvent","getEvents","updateEvent","deleteEvent","UserEventContants","searchEvent","getEventCategories","FetchConstants","admin","event","LayoutConstants","CHANGE_NOTIFICATION_SYSTEM","CHANGE_SIDEBAR_BACKGROUND_IMAGE","CHANGE_SIDEBAR_BACKGROUND_COLOR","TOGGLE_SIDEBAR_HAS_BACKGROUND_IMAGE","CHANGE_FIXED_CLASSESS","RESTORE_ROOT_DEFAULT_STATE","CHECK_ALL_PENDING_TRANSACTION","TOGGLE_ALL_PENDING","ReduxConstants","fetch","app","SET_AUTHENTICATED","UNSET_AUTHENTICATED","SET_ERROR","CLEAR_ERROR","SET_SUCCESS","CLEAR_SUCCESS","headers","Authorization","localStorage","getItem","baseurl","process","PORT","handleResponse","request","a","actionName","fetchConstant","split","reduce","prev","curr","then","res","json","resJson","data","type","message","msg","payload","catch","error","errorMessage","finally","logoutLocaly","console","log","removeItem","setAuthState","setItem","handleAdminRequest","Header","adminLogoutResponseLoading","Spinner","animation","variant","authenticated","invokeLogoutAdmin","Button","renderLogoutButtonLabel","React","isAuthenticated","method","EventPlaceholder","i","Row","Col","Card","Placeholder","as","xs","Body","Title","Text","handleEventRequest","Home","renderSearchArea","searchEventRequest","searchEventIsLoading","getEventCategoriesResponse","searchEventResponseMessage","invokeSetSearchEventParams","invokeSearchEvent","dateRange","invokeGetEventCategories","dateFromValue","from","getInputDateFormat","dateToValue","Accordion","Item","Form","FloatingLabel","controlId","label","Control","onChange","value","currentTarget","title","address","valueOf","Check","isVirtual","checked","eventCategory","inline","categories","filter","filterValue","disabled","dateString","month","getUTCMonth","fullMonth","getDate","searchEventResponse","eventViews","category","toLocaleUpperCase","description","toLocaleLowerCase","date","toDateString","renderEvents","user","response","getEventCategoriesIsLoading","Array","isArray","length","setUserSearchEventRequestParams","body","JSON","stringify","Events","isCreate","renderCreateEvent","createEventRequest","createEventIsLoading","createEventResponseMessage","createEventResponse","updateEventRequest","updateEventIsLoading","updateEventResponseMessage","updateEventResponse","deleteEventResponseMessage","deleteEventResponse","invokeSetAdminCreateEventParams","invokeAdminCreateEvent","invokeSetAdminUpdateEventParams","invokeAdminUpdateEvent","invokeClearAdminCreateEventResponseMessage","invokeClearAdminUpdateEventResponseMessage","invokeClearAdminDeleteEventResponseMessage","responseMessage","setRequestParams","invokeEventAction","invokeClearEventAction","eventDate","header","handleError","handleSuccess","chnageToCreateMode","defaultActiveKey","invokeAdminGetEvent","chnageToUpdateMode","scrollTo","invokeAdminDeleteEvent","confirm","getEventsResponse","getEventsIsLoading","_id","getEventsResponseMessage","deleteEventIsLoading","setAdminCreateEventRequestParams","setAdminUpdateEventRequestParams","Login","isNewUser","renderForm","createAdminRequest","createAdminResponseLoading","loginAdminRequest","createAdminResponse","createAdminResponseMessage","loginAdminResponseLoading","invokeSetCreateAdminRequestParams","loginAdminResponse","loginAdminResponseMessage","invokeCreateAdmin","invokeSetLoginAdminRequestParams","invokeLoginAdmin","responseLoading","invokeSetParams","invokeAction","style","renderError","placeholder","username","password","hidden","email","invokeClearCreateAdminResponseMessage","invokeClearLoginAdminResponseMessage","invokeClearAction","setTimeout","Alert","renderBack","component","setCreateAdminRequestParams","setLoginAdminRequestParams","resJon","extra","token","Admin","handleNotificationClick","position","level","_notificationSystem","addNotification","data-notify","autoDismiss","getRoutes","render","handleClick","getBrandText","handleImageClick","onChangeSidebarBackgroundImage","handleColorClick","onChangeSidebarBackgroundColor","handleHasImage","hasImage","onToggleHasBackground","handleFixedClick","fixedClasses","onChangeFixedClasses","success","refs","notificationSystem","onAdd","notification","invokeClearSuccess","invokeClearError","onChangeNotificationSystem","history","document","documentElement","classList","toggle","action","scrollTop","scrollingElement","mainPanel","AllRoutes","unprotectedRoutes","protectedRoutes","ref","imagine1","root","changeNotificationSystem","changeSidebarBackgroundImage","changeSidebarBackgroundColor","hasBackground","toggleHasBackground","classes","changeFixedClasses","onRestoreRootDefaultState","autoLogout","store","next","toLowerCase","syncAuthState","getState","authed","authToken","Middlewares","thunk","createAdminInitialState","autoID","loginAdminInitialState","getAdminInitialState","logoutAdminInitialState","adminAdminReducer","combineReducers","createEventInitialState","adminID","createdAt","updatedAt","getEventsInitialState","updateEventInitialState","deleteEventInitialState","adminEventReducer","adminReducer","searchEventInitialState","getEventCategoriesInitialState","userEventReducer","userReducer","fetchReducer","initialState","layoutReducer","appInitialState","appReducer","SET_SUSSESS","sussess","CLEAR_SUSSESS","applyMiddleware","createStore","ReactDOM","basename","getElementById","module","exports","defaultWidth","screen","Wrapper","Containers","DefaultStyle","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","warning","info","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar"],"mappings":";kTAkCeA,E,4JA9Bb,WACE,OACE,4BAAQC,UAAU,UAChB,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,yBAAKF,UAAU,aACb,8BAeF,uBAAGA,UAAU,wBAAb,SACU,IAAIG,MAAOC,cAAe,IAClC,uBAAGC,KAAK,6BAAR,sB,GAvBSC,a,yCCafC,E,4JACJ,WAEE,MAA8BC,KAAKC,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAWlB,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,SAAU,EAAGT,KAAK,KACzB,uBAAGL,UAAU,oBACb,uBAAGA,UAAU,uBAAb,cA4BF,kBAACa,EAAA,EAAD,CAASC,SAAU,GACjB,kBAAC,IAAD,CACEC,KAAM,GACNJ,QAASA,MAMf,kBAACC,EAAA,EAAD,CAAKI,WAAS,GACZ,kBAACH,EAAA,EAAD,CAASC,SAAU,GACjB,kBAAC,IAAD,CAAMG,GAAG,SAAT,YAwBF,kBAACJ,EAAA,EAAD,CACEC,SAAU,EACVI,QAAS,SAAAC,GACPA,EAAEC,iBACFV,MAJJ,iB,GAlFgBJ,a,GAiGXe,aA3GS,SAACC,EAAOb,GAAR,mBAAC,eACpBA,GADmB,IAEtBE,SAAS,OAGgB,SAAAY,GAAQ,MAAK,CACtCb,SADsC,gBAsGzBW,CAGbd,G,gBCtGIiB,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAEDa,MAAQ,CACXG,MAAOC,OAAOC,YAJC,E,+CAQnB,SAAYC,GACV,OAAOpB,KAAKC,MAAMoB,SAASC,SAASC,QAAQH,IAAc,EAAI,SAAW,K,8BAG3E,WACEpB,KAAKwB,SAAS,CAAEP,MAAOC,OAAOC,e,+BAGhC,WACEnB,KAAKyB,mBACLP,OAAOQ,iBAAiB,SAAU1B,KAAKyB,iBAAiBE,KAAK3B,S,oBAG/D,WAAU,IAAD,OAEqBA,KAAKC,MAAM2B,MAGvC,OACE,yBACEC,GAAG,UACHrC,UAAU,UACVsC,aAAY9B,KAAKC,MAAM8B,MACvBC,aAAYhC,KAAKC,MAAM2B,OAKvB,yBAAKpC,UAAU,QACb,uBAAGK,KAAK,IAAIL,UAAU,yBACpB,yBAAKA,UAAU,YACb,yBAAKyC,IAAKC,IAAMC,IAAI,iBAGxB,uBAAGtC,KAAK,IAAIL,UAAU,2BAAtB,iBAKF,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,OACXQ,KAAKC,MAAMmC,OAAOC,KAAI,SAACC,EAAMC,GAC5B,OAAKD,EAAKE,SAsBH,KApBH,wBACEhD,UACE8C,EAAKG,QACD,oBACA,EAAKC,YAAYJ,EAAKK,OAASL,EAAKM,MAE1CL,IAAKA,GAEL,kBAAC,IAAD,CACE9B,GAAI6B,EAAKK,OAASL,EAAKM,KACvBpD,UAAU,WACVqD,gBAAgB,UAEhB,uBAAGrD,UAAW8C,EAAKQ,OAEnB,2BAAIR,EAAKS,kB,GApETjD,aAiFPe,eAvFS,SAACC,EAAOb,GAAR,MAAmB,CACzCA,YAGyB,iBAAO,KAmFnBY,CAA6CG,G,iCC5D7CgC,EAnCO,CACpBC,YAAa,CACXC,mBAAoB,8CACpBC,QAAS,mCACTC,OAAQ,kCACRC,aAAc,wCACdC,YAAa,uCACbC,uBAAwB,mDAE1BC,WAAY,CACVN,mBAAoB,6CACpBC,QAAS,kCACTC,OAAQ,iCACRC,aAAc,uCACdC,YAAa,sCACbC,uBAAwB,kDAE1BE,SAAU,CACRP,mBAAoB,2CACpBC,QAAS,gCACTC,OAAQ,+BACRC,aAAc,qCACdC,YAAa,oCACbC,uBAAwB,gDAE1BG,YAAa,CACXR,mBAAoB,8CACpBC,QAAS,mCACTC,OAAQ,kCACRC,aAAc,wCACdC,YAAa,uCACbC,uBAAwB,oDCGbI,EAlCY,CACzBC,YAAa,CACXV,mBAAoB,8CACpBC,QAAS,mCACTC,OAAQ,kCACRC,aAAc,wCACdC,YAAa,uCACbC,uBAAwB,mDAE1BM,UAAW,CACTX,mBAAoB,4CACpBC,QAAS,iCACTC,OAAQ,gCACRC,aAAc,sCACdC,YAAa,qCACbC,uBAAwB,gDAE1BO,YAAa,CACXZ,mBAAoB,8CACpBC,QAAS,mCACTC,OAAQ,kCACRC,aAAc,wCACdC,YAAa,uCACbC,uBAAwB,mDAE1BQ,YAAa,CACXb,mBAAoB,8CACpBC,QAAS,mCACTC,OAAQ,kCACRC,aAAc,wCACdC,YAAa,uCACbC,uBAAwB,oDCbbS,EAlBW,CACxBC,YAAa,CACXf,mBAAoB,8CACpBC,QAAS,mCACTC,OAAQ,kCACRC,aAAc,wCACdC,YAAa,uCACbC,uBAAwB,mDAE1BW,mBAAoB,CAClBhB,mBAAoB,sDACpBC,QAAS,2CACTC,OAAQ,0CACRC,aAAc,gDACdC,YAAa,+CACbC,uBAAwB,iDCObY,EAlBQ,CAIrBC,MAAM,2BACDpB,GADA,IAKCqB,MAAM,eAAMV,KAMlBU,MAAM,eAAML,ICFCM,EAjBS,CACtBC,2BAA4B,6BAE5BC,gCAAiC,kCACjCC,gCAAiC,kCAEjCC,oCAAqC,sCAErCC,sBAAuB,wBAEvBC,2BAA4B,6BAE5BC,8BAA+B,4BAE/BC,mBAAoB,qBCgBPC,EAxBQ,CAIrBC,MAAM,eAAMb,GAKZxB,OAAO,eAAM2B,GAKbW,IAAK,CACHC,kBAAmB,wBACnBC,oBAAqB,sBACrBC,UAAW,gBACXC,YAAa,kBACbC,YAAa,kBACbC,cAAe,sBClBNC,EAAU,iBAAO,CAC5BC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,iBAC9C,eAAgB,qBAILC,EAAU,qBADb,UAAGC,oHAAYC,YAAf,QAAuB,MAUpBC,EAAc,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,6DAAgBC,EAAhB,+BAA6B,GAAInF,EAAjC,uBAE5BoF,EAAgB,CADZA,EAAgBpB,EAAeC,OACnB,mBAAmBkB,EAAWE,MAAM,OAAMC,QACxD,SAACC,EAAMC,GAAP,OAAgBD,EAAKC,MAHK,kBAMrBP,EACJQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAOD,EAAQC,KACfC,EAAOF,EAAQE,KACfC,EAAUH,EAAQI,IAExB,MAAY,SAARF,GACF9F,EAAS,CACP8F,KAAMV,EAAc7C,YACpB0D,QAASF,IAGJH,IAGT5F,EAAS,CACP8F,KAAMV,EAAc9C,aACpB2D,QAAS,CAAEJ,OAAME,aAGZH,MAERM,OAAM,SAACC,GACN,IAAMC,EAAeD,EAAMJ,QAM3B,OALA/F,EAAS,CACP8F,KAAMV,EAAc7C,YACpB0D,QAASG,IAGJ,CAAEN,KAAM,QAASC,QAASK,MAElCC,SAAQ,WACPrG,EAAS,CAAE8F,KAAMV,EAAc/C,aAvCP,2CAAH,sDAyEdiE,EAAe,kBAAM,SAACtG,GACjCA,EAAS,CAAE8F,KAAM9B,EAAeE,IAAIE,sBACpCmC,QAAQC,IAAI,gBACZ7B,aAAa8B,WAAW,gBACxB9B,aAAa8B,WAAW,mBAEbC,EAAe,kBAAM,SAAC1G,GACjC2E,aAAagC,QAAQ,gBAAiB,QACtC3G,EAAS,CAAE8F,KAAM9B,EAAeE,IAAIC,kBAAmB8B,SAAS,M,8ECxF5DW,GAAkB,uCAAG,WAAO3B,EAASE,EAAYnF,GAA5B,SAAAkF,EAAA,+EAClBF,EAAeC,EAAS,SAAWE,EAAYnF,IAD7B,2CAAH,0DCElB6G,G,6KAKJ,WAGE,OAFuC5H,KAAKC,MAApC4H,2BAGN,8BACE,0BAAMrI,UAAU,qBAAhB,aACA,kBAACsI,GAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,UAAUzH,KAAK,QAGnD,0C,oBAIJ,WACE,MAA6CP,KAAKC,MAA1CgI,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,kBAEvB,OACE,yBAAK1I,UAAU,8CACZyI,EACC,kBAACE,GAAA,EAAD,CACEH,QAAQ,QACRnB,KAAK,SACLrH,UAAU,OACVkB,QAASwH,GAERlI,KAAKoI,2BAGR,uBAAG5I,UAAU,sCACX,uBAAGK,KAAK,UAAR,yB,GAlCSwI,IAAMvI,WA0CZe,gBAvDS,SAACC,EAAOb,GAC9B,MAAO,CACLgI,cAAenH,EAAMmE,IAAIqD,gBACzBT,2BAA4B/G,EAAMkE,MAAMZ,MAAMA,MAAMV,YAAYvD,YAIzC,SAACY,GAAD,MAAe,CACxCmH,kBADwC,WAEtCnH,GDmE6B,SAACA,GAGhC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMZ,MAAMV,YAAYP,UAEjDwE,GACL3C,MAAM,GAAD,OAAIY,EAAJ,2BAAsC,CACzCJ,QAASA,IACT+C,OAAQ,SAEV,cACAxH,GACAyF,MAAK,SAACG,GAGN5F,EAASsG,eClCExG,CAA6C+G,I,UCd7CY,G,4JAvCb,WACE,MAAO,CAAC,GAAI,GAAI,GAAI,IAAInG,KAAI,SAACgC,EAAOoE,GAAR,OAC1B,kBAACC,EAAA,EAAD,CAAKnG,IAAKkG,GACR,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMpJ,UAAU,aACd,kBAACqJ,GAAA,EAAD,CAAaC,GAAIF,IAAKhB,OAAQG,UAAU,QACtC,kBAACc,GAAA,EAAD,CAAaE,GAAI,KAGnB,kBAACH,EAAA,EAAKI,KAAN,KACE,kBAACH,GAAA,EAAD,CAAaC,GAAIF,IAAKK,MAAOlB,UAAU,QACrC,kBAACc,GAAA,EAAD,CAAaE,GAAI,KAGnB,kBAACF,GAAA,EAAD,CAAaC,GAAIF,IAAKM,KAAMnB,UAAU,QACpC,kBAACc,GAAA,EAAD,CAAaE,GAAI,IADnB,IACyB,kBAACF,GAAA,EAAD,CAAaE,GAAI,IAAM,IAC9C,kBAACF,GAAA,EAAD,CAAaE,GAAI,IAFnB,IAEyB,kBAACF,GAAA,EAAD,CAAaE,GAAI,IAAM,IAC9C,kBAACF,GAAA,EAAD,CAAaE,GAAI,KAGnB,kBAACF,GAAA,EAAD,CAAaC,GAAIF,IAAKM,KAAMnB,UAAU,QACpC,kBAACc,GAAA,EAAD,CAAaE,GAAI,KAGnB,kBAACF,GAAA,EAAD,CAAaC,GAAIF,IAAKM,KAAMnB,UAAU,QACpC,kBAACc,GAAA,EAAD,CAAaE,GAAI,MAIrB,kBAACF,GAAA,EAAD,CAAaC,GAAIF,IAAKrJ,OAAQwI,UAAU,QACtC,kBAACc,GAAA,EAAD,CAAaE,GAAI,e,GA/BAV,IAAMvI,WCI/BqJ,GAAkB,uCAAG,WAAOnD,EAASE,EAAYnF,GAA5B,SAAAkF,EAAA,+EAClBF,EAAeC,EAAS,SAAWE,EAAYnF,IAD7B,2CAAH,0D,kBCiDlBqI,G,4MAoCJC,iBAAmB,WAAO,IAAD,EACvB,EASI,EAAKpJ,MARPqJ,EADF,EACEA,mBACAC,EAFF,EAEEA,qBAEAC,GAJF,EAGEC,2BAHF,EAIED,4BAEAE,EANF,EAMEA,2BACAC,EAPF,EAOEA,kBAIIC,GAXN,EAQEC,yBAGgBP,EAAmBM,WAC/BE,EAAgBF,EAAUG,KAC5B,EAAKC,mBAAmBJ,EAAUG,MAClC,GACEE,EAAcL,EAAUnJ,GAC1B,EAAKuJ,mBAAmBJ,EAAUnJ,IAClC,GAEJ,OACE,kBAACmI,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,KAAN,KACE,kBAACkB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,KAAX,CAAgB7J,SAAS,KACvB,kBAAC4J,EAAA,EAAUtC,OAAX,oBACA,kBAACsC,EAAA,EAAUlB,KAAX,KACE,kBAACoB,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,cACVC,MAAM,QACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9BhB,EAA2B,CAAEkB,MAAOF,KAEtCA,MAAOpB,EAAmBsB,UAKhC,kBAACjC,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,gBACVC,MAAM,UACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9BhB,EAA2B,CAAEmB,QAASH,KAExCA,MAAOpB,EAAmBuB,YAKhC,kBAAClC,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,aACVC,MAAM,YACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAI+J,EAAQ/J,EAAEgK,cAAcD,MAC5BA,EAAQA,EAAQ,IAAI/K,KAAK+K,GAAOI,UAAYJ,EAE5ChB,EAA2B,CACzBE,UAAU,2BACLN,EAAmBM,WADf,IAEPG,KAAMW,OAIZA,MAAOZ,MAKb,kBAACnB,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,aACVC,MAAM,UACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9BhB,EAA2B,CACzBE,UAAU,2BACLN,EAAmBM,WADf,IAEPnJ,GAAIiK,OAIVA,MAAOT,OAMf,kBAACvB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACyB,EAAA,EAAKW,MAAN,CACElE,KAAK,SACLhF,GAAI,oBACJ0I,MAAO,gBACPE,SAAU,SAAC9J,GACT+I,EAA2B,CACzBsB,WAAY1B,EAAmB0B,aAGnCC,QAAO,UAAE3B,EAAmB0B,iBAArB,aAKb,kBAACtC,EAAA,EAAD,CAAKlJ,UAAU,QACb,kBAACmJ,EAAA,EAAD,KACE,6BACE,yCACCa,EAA2BnH,KAAI,SAAC6I,EAAezC,GAAhB,OAC9B,kBAAC2B,EAAA,EAAKW,MAAN,CACExI,IAAKkG,EACL5B,KAAK,SACLhF,GAAI,yBAA2B4G,EAC/B8B,MAAOW,EAAcnI,KACrBoI,QAAM,EAENV,SAAU,SAAC9J,GAAO,IAAD,EACTsK,EAAUtK,EAAEgK,cAAcM,QAC1BG,EAAU,UACd9B,EAAmB8B,kBADL,QACmB,GAEjC1B,EADEuB,EACyB,CACzBG,WAAW,GAAD,mBACLA,GADK,CAERF,EAAcnI,QAIS,CACzBqI,WAAYA,EAAWC,QACrB,SAACC,GAAD,OACEA,IAAgBJ,EAAcnI,mBAWlD,kBAACoF,GAAA,EAAD,CACE3I,UAAU,QACVwI,QAAQ,UACRnB,KAAK,SACL0E,SAAUhC,EACV7I,QAAS,WACPiJ,EAAkBL,KAGnBC,EACC,8BACE,0BAAM/J,UAAU,qBAAhB,aACA,kBAACsI,GAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,UAAUzH,KAAK,QAGnD,2D,uDAtNpB,WAEEP,KAAKC,MAAM4J,2BACX7J,KAAKC,MAAM0J,kBAAkB,CAC3BiB,MAAO,GACPQ,WAAY,KACZrB,KAAM,KACNtJ,GAAI,KACJuK,UAAW,KACXH,QAAS,O,gCASb,SAAmBW,GACjB,IAAMC,EAAQ,IAAI9L,KAAK6L,GAAYE,cAC7BC,EAAYF,EAAQ,GAAK,IAAMA,EAAQA,EAE7C,OACE,IAAI9L,KAAK6L,GAAY5L,cACrB,IACA+L,EACA,IACA,IAAIhM,KAAK6L,GAAYI,Y,0BA2MzB,WACE,MAAsD5L,KAAKC,MAAnD4L,EAAR,EAAQA,oBAAqBtC,EAA7B,EAA6BA,qBAEvBuC,EAAaD,EAAoBxJ,KAAI,SAACgC,EAAOoE,GAAR,OACzC,kBAACC,EAAA,EAAD,CAAKnG,IAAKkG,GACR,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMpJ,UAAU,aACd,kBAACoJ,EAAA,EAAKhB,OAAN,KAAcvD,EAAM0H,UACpB,kBAACnD,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYzJ,UAAU,MACnB6E,EAAMuG,MAAMoB,qBAEf,kBAACpD,EAAA,EAAKM,KAAN,KAAY7E,EAAM4H,YAAYC,qBAE9B,kBAACtD,EAAA,EAAKM,KAAN,CAAW1J,UAAU,cAClB6E,EAAM2G,UACH,0BACA,4BAGN,kBAACpC,EAAA,EAAKM,KAAN,CAAW1J,UAAU,aAArB,YACY6E,EAAMwG,UAGpB,kBAACjC,EAAA,EAAKrJ,OAAN,CAAaC,UAAU,cACpB,IAAIG,KAAK0E,EAAM8H,MAAMC,sBAOhC,OACE,6BACE,wBAAI5M,UAAU,kBAAd,UACA,6BAAM+J,EAAuB,kBAAC,GAAD,MAAuBuC,M,oBAK1D,WACE,OACE,yBAAKtM,UAAU,WACb,kBAACC,EAAA,EAAD,CAAWD,UAAU,QACnB,kBAAC,GAAD,MACCQ,KAAKqJ,oBAER,kBAAC5J,EAAA,EAAD,CAAWC,OAAK,GAAEM,KAAKqM,qB,GAtRZhE,IAAMvI,WA4RVe,gBAlUS,SAACC,EAAOb,GAC9B,MAAO,CACLqJ,mBAAoBxI,EAAMkE,MAAMsH,KAAKjI,MAAMJ,YAAY+B,QACvDuD,qBAAsBzI,EAAMkE,MAAMsH,KAAKjI,MAAMJ,YAAY9D,QACzDsJ,2BACE3I,EAAMkE,MAAMsH,KAAKjI,MAAMJ,YAAYsI,SAASzF,QAC9C+E,oBAAqB/K,EAAMkE,MAAMsH,KAAKjI,MAAMJ,YAAYsI,SAAS3F,KAEjE4F,4BACE1L,EAAMkE,MAAMsH,KAAKjI,MAAMH,mBAAmB/D,QAC5CqJ,2BACE1I,EAAMkE,MAAMsH,KAAKjI,MAAMH,mBAAmBqI,SAAS3F,SAI9B,SAAC7F,GAAD,MAAe,CACxC2I,2BADwC,YACgB,IAA3B0B,EAA0B,EAA1BA,WAAepE,EAAW,kBACjDyF,MAAMC,QAAQtB,KAAgBA,EAAWuB,SAC3CvB,EAAa,MAEfrK,ELyG2C,SAACiG,GAAD,MAAc,CAC3DH,KAAM9B,EAAeC,MAAMX,MAAMJ,YAAYf,mBAC7C8D,WK3GW4F,CAAgC,aAAExB,cAAepE,MAE5D2C,kBAPwC,YAOgC,IAApDiB,EAAmD,EAAnDA,MAAOQ,EAA4C,EAA5CA,WAAYrB,EAAgC,EAAhCA,KAAMtJ,EAA0B,EAA1BA,GAAIuK,EAAsB,EAAtBA,UAAWH,EAAW,EAAXA,QAC1D9J,ED7BF,SAAC,GAAD,IAAG6J,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,WAAYxB,EAAtB,EAAsBA,UAAWoB,EAAjC,EAAiCA,UAAWH,EAA5C,EAA4CA,QAA5C,OACA,SAAC9J,GAGC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMX,MAAMJ,YAAYd,UAEjDgG,GACLnE,MAAM,GAAD,OAAIY,EAAJ,2BAAsC,CACzCJ,QAASA,IACT+C,OAAQ,OACRsE,KAAMC,KAAKC,UAAU,CACnBnG,KAAM,CACJgE,QACAQ,aACAxB,YACAoB,YACAH,eAIN,cACA9J,ICWAkD,CAAY,CACV2G,QACAQ,aACAxB,UAAW,CAAEG,OAAMtJ,MACnBuK,YACAH,cAINhB,yBAlBwC,WAmBtC9I,GDjBoC,SAACA,GAGvC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMX,MAAMH,mBAAmBf,UAExDgG,GACLnE,MAAM,GAAD,OAAIY,EAAJ,mCAA8C,CACjDJ,QAASA,IACT+C,OAAQ,QAEV,qBACAxH,UCwSWF,CAA6CuI,I,SC7UtDD,GAAkB,uCAAG,WAAOnD,EAASE,EAAYnF,GAA5B,SAAAkF,EAAA,+EAClBF,EAAeC,EAAS,eAAiBE,EAAYnF,IADnC,2CAAH,0DAgCX8C,GAAY,kBAAM,SAAC9C,GAG9B,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMR,UAAUV,UAErDgG,GACLnE,MAAM,GAAD,OAAIY,EAAJ,gCAA2C,CAC9CJ,QAASA,IACT+C,OAAQ,QAEV,YACAxH,KCqCEiM,G,4MACJlM,MAAQ,CACNmM,UAAU,G,EA2DZC,kBAAoB,WAAO,IAAD,EACxB,EAuBI,EAAKjN,MAtBPkN,EADF,EACEA,mBACAC,EAFF,EAEEA,qBACAC,EAHF,EAGEA,2BACAC,EAJF,EAIEA,oBAEAC,EANF,EAMEA,mBACAC,EAPF,EAOEA,qBACAC,EARF,EAQEA,2BACAC,EATF,EASEA,oBAEAC,EAXF,EAWEA,2BACAC,EAZF,EAYEA,oBAEAC,EAdF,EAcEA,gCACAC,EAfF,EAeEA,uBAEAC,EAjBF,EAiBEA,gCACAC,EAlBF,EAkBEA,uBAEAC,EApBF,EAoBEA,2CACAC,EArBF,EAqBEA,2CACAC,EAtBF,EAsBEA,2CAEMlB,EAAa,EAAKnM,MAAlBmM,SAGFjH,EAAUiH,EAAWE,EAAqBI,EAC1CpN,EAAU8M,EAAWG,EAAuBI,EAC5CY,EAAkBnB,EACpBI,EACAI,EACElB,EAAWU,EAAWK,EAAsBI,EAE5CW,EAAmBpB,EACrBY,EACAE,EACEO,EAAoBrB,EACtBa,EACAE,EACEO,EAAyBtB,EAC3BgB,EACAC,EAGEM,EAAY,EAAKxE,mBAAmBhE,EAAQmG,MAE5CsC,EAASxB,EAAW,eAAiB,eA6B3C,OA1BImB,IAAoB7B,EAAS3B,OAE/B2D,IAEA,EAAKtO,MAAMyO,YAAYN,IAGhBA,GAAmB7B,EAAS3B,QAEnC2D,IAEA,EAAKtO,MAAM0O,cAAcP,GACzB,EAAKQ,sBAIHjB,IAA+BC,EAAoBhD,OACrDuD,IACA,EAAKlO,MAAMyO,YAAYf,IAGhBA,GAA8BC,EAAoBhD,QACzDuD,IACA,EAAKlO,MAAM0O,cAAchB,IAIzB,kBAAC/E,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,KAAN,KACE,kBAACkB,EAAA,EAAD,CAAW2E,iBAAiB,KAC1B,kBAAC3E,EAAA,EAAUC,KAAX,CAAgB7J,SAAS,KACvB,kBAAC4J,EAAA,EAAUtC,OAAX,KAAmB6G,GAEnB,kBAACvE,EAAA,EAAUlB,KAAX,KACE,kBAACoB,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,aACVC,MAAM,QACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9B2D,EAAiB,CAAEzD,MAAOF,KAE5BA,MAAO1E,EAAQ4E,UAKrB,kBAACjC,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,mBACVC,MAAM,cACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9B2D,EAAiB,CAAEpC,YAAavB,KAElCA,MAAO1E,EAAQiG,gBAKrB,kBAACtD,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,gBACVC,MAAM,WACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9B2D,EAAiB,CAAEtC,SAAUrB,KAE/BA,MAAO1E,EAAQ+F,cAMvB,kBAACrD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,eACVC,MAAM,UACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9B2D,EAAiB,CAAExD,QAASH,KAE9BA,MAAO1E,EAAQ6E,YAKrB,kBAAClC,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,CACEC,UAAU,YACVC,MAAM,OACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACL4D,SAAU,SAAC9J,GACT,IAAI+J,EAAQ/J,EAAEgK,cAAcD,MAC5BA,EAAQA,EAAQ,IAAI/K,KAAK+K,GAAOI,UAAYJ,EAC5C2D,EAAiB,CAAElC,KAAMzB,KAE3BA,MAAO8D,MAKb,kBAAC7F,EAAA,EAAD,KACE,kBAACyB,EAAA,EAAKW,MAAN,CACElE,KAAK,SACLhF,GAAI,oBACJ0I,MAAO,gBACPE,SAAU,SAAC9J,GACT0N,EAAiB,CACfrD,WAAYhF,EAAQgF,aAGxBC,QAAO,UAAEjF,EAAQgF,iBAAV,aAKb,yBAAKxL,UAAU,qDACb,kBAAC2I,GAAA,EAAD,CACE3I,UAAU,QACVwI,QAAQ,UACRnB,KAAK,SACL0E,SAAUpL,EACVO,QAAS,WACP4N,EAAkBtI,KAGnB7F,EACC,8BACE,0BAAMX,UAAU,qBACbyN,EAAW,WAAa,YAE3B,kBAACnF,GAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,UACRzH,KAAK,QAIT,8BAAO0M,EAAW,SAAW,WAIjC,kBAAC9E,GAAA,EAAD,CACE3I,UAAU,YACVwI,QAAQ,YACRnB,KAAK,SACLnG,QAAS,WAEP2N,EAAiB,CACfzD,MAAO,GACPqB,YAAa,GACbF,SAAU,GACVI,KAAM,GACNnB,WAAW,EACXH,QAAS,KAIX,EAAK+D,uBAhBT,kB,uDAhRlB,WAEE5O,KAAKC,MAAM6O,wB,gCAGb,WACE9O,KAAKwB,SAAS,CAAEyL,UAAU,M,gCAG5B,WACEjN,KAAKwB,SAAS,CAAEyL,UAAU,M,yBAG5B,SAAY5I,GACVrE,KAAK+O,qBAEL/O,KAAKC,MAAM8N,gCAAgC1J,GAG3CnD,OAAO8N,SAAS,EAAG,K,yBAGrB,SAAYnN,GACV,IAAQoN,EAA2BjP,KAAKC,MAAhCgP,uBAGR,IAAK/N,OAAOgO,QAAQ,iDAClB,OAAO,KAITD,EAAuBpN,K,gCAQzB,SAAmB2J,GACjB,IAAMC,EAAQ,IAAI9L,KAAK6L,GAAYE,cAC7BC,EAAYF,EAAQ,GAAK,IAAMA,EAAQA,EAE7C,OACE,IAAI9L,KAAK6L,GAAY5L,cACrB,IACA+L,EACA,IACA,IAAIhM,KAAK6L,GAAYI,Y,0BAmQzB,WAAgB,IAAD,OACb,EAAkD5L,KAAKC,MAA/CkP,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,mBAErBtD,EAAaqD,EAAkB9M,KAAI,SAACgC,EAAOoE,GAAR,OACvC,kBAACC,EAAA,EAAD,CAAKnG,IAAKkG,GACR,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMpJ,UAAU,IACd,kBAACoJ,EAAA,EAAKhB,OAAN,KACE,yBAAKpI,UAAU,qDACb,kCAAQ6E,EAAM0H,UAEd,8BACE,0BAAMvM,UAAU,QACd,4BACEqH,KAAK,SACLrH,UAAU,gBACVkB,QAAS,kBAAM,EAAKoD,YAAYO,KAEhC,uBAAG7E,UAAU,2BAGjB,8BACE,4BACEqH,KAAK,SACLrH,UAAU,gBACVkB,QAAS,kBAAM,EAAKqD,YAAYM,EAAMgL,OAEtC,uBAAG7P,UAAU,iCAOvB,kBAACoJ,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYzJ,UAAU,MACnB6E,EAAMuG,MAAMoB,qBAGf,kBAACpD,EAAA,EAAKM,KAAN,KAAY7E,EAAM4H,YAAYC,qBAE9B,kBAACtD,EAAA,EAAKM,KAAN,CAAW1J,UAAU,cAClB6E,EAAM2G,UACH,0BACA,4BAGN,kBAACpC,EAAA,EAAKM,KAAN,CAAW1J,UAAU,aAArB,YACY6E,EAAMwG,UAIpB,kBAACjC,EAAA,EAAKrJ,OAAN,CAAaC,UAAU,cACpB,IAAIG,KAAK0E,EAAM8H,MAAMC,sBAOhC,OACE,6BACE,wBAAI5M,UAAU,kBAAd,eACA,6BAAM4P,EAAqB,kBAAC,GAAD,MAAuBtD,M,oBAKxD,WAGE,OAFA,aAAW9L,KAAKC,OAGd,yBAAKT,UAAU,WACb,kBAACC,EAAA,EAAD,CAAWD,UAAU,QACnB,kBAAC,GAAD,MACCQ,KAAKkN,qBAER,kBAACzN,EAAA,EAAD,CAAWC,OAAK,GAAEM,KAAKqM,qB,GArYVhE,IAAMvI,WA2YZe,gBAtcS,SAACC,EAAOb,GAC9B,MAAO,CACLmP,mBAAoBtO,EAAMkE,MAAMZ,MAAMC,MAAMR,UAAU1D,QACtDmP,yBACExO,EAAMkE,MAAMZ,MAAMC,MAAMR,UAAU0I,SAASzF,QAC7CqI,kBAAmBrO,EAAMkE,MAAMZ,MAAMC,MAAMR,UAAU0I,SAAS3F,KAE9DuG,mBAAoBrM,EAAMkE,MAAMZ,MAAMC,MAAMT,YAAYoC,QACxDoH,qBAAsBtM,EAAMkE,MAAMZ,MAAMC,MAAMT,YAAYzD,QAC1DkN,2BACEvM,EAAMkE,MAAMZ,MAAMC,MAAMT,YAAY2I,SAASzF,QAC/CwG,oBAAqBxM,EAAMkE,MAAMZ,MAAMC,MAAMT,YAAY2I,SAAS3F,KAElE2G,mBAAoBzM,EAAMkE,MAAMZ,MAAMC,MAAMP,YAAYkC,QACxDwH,qBAAsB1M,EAAMkE,MAAMZ,MAAMC,MAAMP,YAAY3D,QAC1DsN,2BACE3M,EAAMkE,MAAMZ,MAAMC,MAAMP,YAAYyI,SAASzF,QAC/C4G,oBAAqB5M,EAAMkE,MAAMZ,MAAMC,MAAMP,YAAYyI,SAAS3F,KAElE2I,qBAAsBzO,EAAMkE,MAAMZ,MAAMC,MAAMN,YAAY5D,QAC1DwN,2BACE7M,EAAMkE,MAAMZ,MAAMC,MAAMN,YAAYwI,SAASzF,QAC/C8G,oBAAqB9M,EAAMkE,MAAMZ,MAAMC,MAAMN,YAAYwI,SAAS3F,SAI3C,SAAC7F,GAAD,MAAe,CACxC+N,oBADwC,WAEtC/N,EAAS8C,OAGXgK,gCALwC,SAKR7G,GAC9BjG,EP6D4C,SAACiG,GAAD,MAAc,CAC5DH,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYV,mBACnD8D,WO/DWwI,CAAiCxI,KAE5C8G,uBARwC,SAQjB9G,GACrBjG,EDjDF,SAAC,GAAD,IAAG6J,EAAH,EAAGA,MAAOqB,EAAV,EAAUA,YAAaF,EAAvB,EAAuBA,SAAUI,EAAjC,EAAiCA,KAAMnB,EAAvC,EAAuCA,UAAWH,EAAlD,EAAkDA,QAAlD,OACA,SAAC9J,GAGC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYT,UAEvDgG,GACLnE,MAAM,GAAD,OAAIY,EAAJ,kCAA6C,CAChDJ,QAASA,IACT+C,OAAQ,OACRsE,KAAMC,KAAKC,UAAU,CACnBnG,KAAM,CACJgE,QACAqB,cACAF,WACAI,OACAnB,YACAH,eAIN,cACA9J,GACAyF,MAAK,WAELzF,EAAS8C,UC0BFD,CAAYoD,KAEvBiH,2CAXwC,WAYtClN,EPgEuD,CACzD8F,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYL,0BO9DnDwK,gCAfwC,SAeR/G,GAC9BjG,EPuD4C,SAACiG,GAAD,MAAc,CAC5DH,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYZ,mBACnD8D,WOzDWyI,CAAiCzI,KAE5CgH,uBAlBwC,SAkBjBhH,GACrBjG,EDlBF,SAACc,EAAD,OAAO+I,EAAP,EAAOA,MAAOqB,EAAd,EAAcA,YAAaF,EAA3B,EAA2BA,SAAUI,EAArC,EAAqCA,KAAMnB,EAA3C,EAA2CA,UAAWH,EAAtD,EAAsDA,QAAtD,OACA,SAAC9J,GAGC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYX,UAEvDgG,GACLnE,MAAM,GAAD,OAAIY,EAAJ,0CAA6C/D,GAAM,CACtD2D,QAASA,IACT+C,OAAQ,QACRsE,KAAMC,KAAKC,UAAU,CACnBnG,KAAM,CAAEgE,QAAOqB,cAAaF,WAAUI,OAAMnB,YAAWH,eAG3D,cACA9J,GACAyF,MAAK,WAELzF,EAAS8C,UCEFC,CAAYkD,EAAQqI,IAAKrI,KAEpCkH,2CArBwC,WAsBtCnN,EP4DuD,CACzD8F,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYP,0BO1DnD0L,uBAzBwC,SAyBjBpN,GACrBd,EDLuB,SAACc,GAAD,OAAQ,SAACd,GAGlC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYZ,UAEvDgG,GACLnE,MAAM,GAAD,OAAIY,EAAJ,0CAA6C/D,GAAM,CACtD2D,QAASA,IACT+C,OAAQ,WAEV,cACAxH,GACAyF,MAAK,WAELzF,EAAS8C,UCPAE,CAAYlC,KAEvBsM,2CA5BwC,WA6BtCpN,EPwDuD,CACzD8F,KAAM9B,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYR,6BOsVtC1C,CAA6CmM,I,UCvatD0C,G,4MACJ5O,MAAQ,CACN6O,WAAW,G,EAgEbC,WAAa,WAAO,IAAD,IACjB,EAgBI,EAAK3P,MAfP4P,EADF,EACEA,mBACAC,EAFF,EAEEA,2BAIAC,GANF,EAGEC,oBAHF,EAIEC,2BAJF,EAMEF,mBACAG,EAPF,EAOEA,0BAIAC,GAXF,EAQEC,mBARF,EASEC,0BATF,EAWEF,mCACAG,EAZF,EAYEA,kBAEAC,EAdF,EAcEA,iCACAC,EAfF,EAeEA,iBAEMb,EAAc,EAAK7O,MAAnB6O,UAGF3J,EAAU2J,EAAYE,EAAqBE,EAC3CU,EAAkBd,EACpBG,EACAI,EAMEQ,EAAkBf,EACpBQ,EACAI,EACEI,EAAehB,EAAYW,EAAoBE,EAErD,OACE,yBAAKhR,UAAU,oDACb,kBAACoJ,EAAA,EAAD,CAAMgI,MAAO,CAAE3P,MAAO,UACpB,kBAAC2H,EAAA,EAAKI,KAAN,KACE,yBAAKxJ,UAAU,QACb,yBAAKA,UAAU,iDACb,0BAAMA,UAAU,wBACbmQ,EACG,6BACA,2BAEN,kBAACxH,GAAA,EAAD,CACEH,QAAQ,OACRnB,KAAK,SACLtG,KAAK,KACLG,QAAS,WACP,EAAKc,SAAS,CAAEmO,WAAYA,MAG7BA,EAAY,QAAU,mBAI3B,wBAAInQ,UAAU,oBACXmQ,EAAY,iBAAmB,SAGjC,EAAKkB,eAGR,kBAACzG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,WACVC,MAAM,WACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACLiK,YAAY,gBACZrG,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9BgG,EAAgB,CAAEK,SAAUrG,KAE9BA,MAAO1E,EAAQ+K,YAInB,kBAAC1G,EAAA,EAAD,CACEC,UAAU,WACVC,MAAM,WACN/K,UAAU,QAEV,kBAAC4K,EAAA,EAAKI,QAAN,CACE3D,KAAK,WACLiK,YAAY,aACZrG,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9BgG,EAAgB,CAAEM,SAAUtG,KAE9BA,MAAO1E,EAAQgL,YAInB,kBAAC3G,EAAA,EAAD,CACEC,UAAU,OACVC,MAAM,OACN/K,UAAU,OACVyR,QAAStB,GAET,kBAACvF,EAAA,EAAKI,QAAN,CACE3D,KAAK,OACLiK,YAAY,oBACZrG,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9BgG,EAAgB,CAAE3N,KAAM2H,KAE1BA,MAAK,UAAE1E,EAAQjD,YAAV,QAAkB,MAI3B,kBAACsH,EAAA,EAAD,CACEC,UAAU,QACVC,MAAM,gBACN/K,UAAU,OACVyR,QAAStB,GAET,kBAACvF,EAAA,EAAKI,QAAN,CACE3D,KAAK,QACLiK,YAAY,8BACZrG,SAAU,SAAC9J,GACT,IAAM+J,EAAQ/J,EAAEgK,cAAcD,MAC9BgG,EAAgB,CAAEQ,MAAOxG,KAE3BA,MAAK,UAAE1E,EAAQkL,aAAV,QAAmB,KAG1B,kBAAC9G,EAAA,EAAKlB,KAAN,CAAW1J,UAAU,cAArB,mDAKF,kBAAC2I,GAAA,EAAD,CACEH,QAAQ,UACRnB,KAAK,SACLnG,QAAS,SAACC,GACRgQ,EAAa3K,IAEfuF,SAAUkF,GAETA,EACC,8BACE,0BAAMjR,UAAU,qBAAhB,cACA,kBAACsI,GAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,UAAUzH,KAAK,QAGnD,8C,gDA/MhB,WACE,OACE,6BACE,uBAAGf,UAAU,wCACX,uBAAGK,KAAK,SAAR,Y,yBAUR,WACE,IAAQ8P,EAAc3P,KAAKc,MAAnB6O,UACR,EASI3P,KAAKC,MARPgQ,EADF,EACEA,2BACAD,EAFF,EAEEA,oBAEAK,EAJF,EAIEA,0BACAD,EALF,EAKEA,mBAEAe,EAPF,EAOEA,sCACAC,EARF,EAQEA,qCAIIhD,EAAkBuB,EACpBM,EACAI,EAEEgB,EAAoB1B,EACtBwB,EACAC,EAGJ,OAAIhD,KANauB,EAAYK,EAAsBI,GAMlBW,UAE/BO,YAAW,WACTD,MACC,KAGD,kBAACE,GAAA,EAAD,CAAOhP,IAAI,SAASyF,QAAQ,UACzBoG,IAKA,uC,oBAuKT,WAEE,OADA,aAAWpO,KAAKC,OAEd,yBAAKT,UAAU,WACb,kBAACC,EAAA,EAAD,CAAWD,UAAU,IAClBQ,KAAKwR,aACLxR,KAAK4P,mB,GAxOIvH,IAAMvI,WCpBX,IApCU,CACvB,CACE8C,KAAM,QACNG,KAAM,GACND,KAAM,GACN2O,UAAWrI,GACXzG,OAAQ,GACRH,UAAU,GAEZ,CACEI,KAAM,SACNG,KAAM,GACND,KAAM,GACN2O,UD0RW5Q,aArRS,SAACC,EAAOb,GAC9B,MAAO,CACL4P,mBAAoB/O,EAAMkE,MAAMZ,MAAMA,MAAMnB,YAAY+C,QACxD8J,2BAA4BhP,EAAMkE,MAAMZ,MAAMA,MAAMnB,YAAY9C,QAChE6P,oBAAqBlP,EAAMkE,MAAMZ,MAAMA,MAAMnB,YAAYsJ,SAAS3F,KAClEqJ,2BACEnP,EAAMkE,MAAMZ,MAAMA,MAAMnB,YAAYsJ,SAASzF,QAE/CiJ,kBAAmBjP,EAAMkE,MAAMZ,MAAMA,MAAMZ,WAAWwC,QACtDkK,0BAA2BpP,EAAMkE,MAAMZ,MAAMA,MAAMZ,WAAWrD,QAC9DiQ,mBAAoBtP,EAAMkE,MAAMZ,MAAMA,MAAMZ,WAAW+I,SAAS3F,KAChEyJ,0BACEvP,EAAMkE,MAAMZ,MAAMA,MAAMZ,WAAW+I,SAASzF,YAIvB,SAAC/F,EAAUd,GAAX,MAAsB,CAC/CkQ,kCAD+C,SACbnJ,GAChCjG,ER+CuC,SAACiG,GAAD,MAAc,CACvDH,KAAM9B,EAAeC,MAAMZ,MAAMnB,YAAYC,mBAC7C8D,WQjDW0K,CAA4B1K,KAEvCsJ,kBAJ+C,SAI7BtJ,GAChBjG,EPtBF,SAAC,GAAD,IAAGgQ,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUjO,EAAvB,EAAuBA,KAAMmO,EAA7B,EAA6BA,MAA7B,OACA,SAACnQ,GAGC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMZ,MAAMnB,YAAYE,UAEjDwE,GACL3C,MAAM,GAAD,OAAIY,EAAJ,2BAAsC,CACzCJ,QAASA,IACT+C,OAAQ,OACRsE,KAAMC,KAAKC,UAAU,CACnBnG,KAAM,CACJmK,WACAC,WACAjO,OACAmO,aAIN,cACAnQ,IOIOkC,CAAY+D,KAEvBmK,sCAP+C,WAQ7CpQ,ER6DkD,CACpD8F,KAAM9B,EAAeC,MAAMZ,MAAMnB,YAAYM,0BQ3D7CgN,iCAX+C,SAWdvJ,GAC/BjG,ERyCsC,SAACiG,GAAD,MAAc,CACtDH,KAAM9B,EAAeC,MAAMZ,MAAMZ,WAAWN,mBAC5C8D,WQ3CW2K,CAA2B3K,KAEtCwJ,iBAd+C,SAc9BxJ,GACfjG,EPTF,SAAC,GAAD,IAAGgQ,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACA,SAACjQ,GAGC,OAFAA,EAAS,CAAE8F,KAAM9B,EAAeC,MAAMZ,MAAMZ,WAAWL,UAEhDwE,GACL3C,MAAM,GAAD,OAAIY,EAAJ,0BAAqC,CACxCJ,QAASA,IACT+C,OAAQ,OACRsE,KAAMC,KAAKC,UAAU,CAAEnG,KAAM,CAAEmK,WAAUC,gBAE3C,aACAjQ,GACAyF,MAAK,SAACoL,GAEN,GAAIA,EAAOC,OAASD,EAAOC,MAAMC,MAAO,CAAC,IAAD,EAChCA,EAAK,UAAGF,EAAOC,MAAMC,aAAhB,QAAyB,GAEpCpM,aAAagC,QAAQ,eAAgBoK,GAErC/Q,EAAS0G,UOVJjE,CAAWwD,KAEtBoK,qCAjB+C,WAkB7CrQ,ERsDiD,CACnD8F,KAAM9B,EAAeC,MAAMZ,MAAMZ,WAAWD,6BQ4L/B1C,CAA6C6O,ICzRxD/M,OAAQ,GACRH,UAAU,IAIU,CACtB,CACEI,KAAM,QACNG,KAAM,OACND,KAAM,aACN2O,UAAWrI,GACXzG,OAAQ,IAEV,CACEC,KAAM,UACNG,KAAM,SACND,KAAM,eACN2O,UAAWzE,GACXrK,OAAQ,M,SC0BCoP,GAAb,4MAMEC,wBAA0B,WAIpB,IAHJC,EAGG,uDAHQ,KACXnL,EAEG,uDAFO,iDACVoL,EACG,uDADK,OAqBR,EAAKjS,MAAMkS,oBAAoBC,gBAAgB,CAC7CxH,MAAO,0BAAMyH,cAAY,OAAO7S,UAAU,eAC1CsH,QAAS,6BAAMA,EAAN,KACToL,MAAOA,EACPD,SAAUA,EACVK,YAAa,KAnCnB,EAuCEC,UAAY,SAACnQ,GACX,OAAOA,EAAOC,KAAI,SAACC,EAAMC,GACvB,MAAoB,KAAhBD,EAAKK,OAEL,kBAAC,IAAD,CACEC,KAAMN,EAAKK,OAASL,EAAKM,KACzB4P,OAAQ,SAACvS,GAAD,OACN,kBAACqC,EAAKmP,UAAN,iBACMxR,EADN,CAEE0O,cAAe,EAAKA,cACpBD,YAAa,EAAKA,YAClB+D,YAAa,EAAKT,4BAGtBzP,IAAKA,IAIF,SAzDf,EA8DEmQ,aAAe,SAACtQ,EAAQQ,GACtB,IAAK,IAAI6F,EAAI,EAAGA,EAAIrG,EAAOuK,OAAQlE,IACjC,IAGS,IAFP,EAAKxI,MAAMoB,SAASC,SAASC,QAC3Ba,EAAOqG,GAAG9F,OAASP,EAAOqG,GAAG7F,MAG/B,OAAOR,EAAOqG,GAAG1F,KAGrB,MAAO,SAxEX,EA2EE4P,iBAAmB,SAAC/Q,GAClB,EAAK3B,MAAM2S,+BAA+BhR,IA5E9C,EA+EEiR,iBAAmB,SAAC9Q,GAClB,EAAK9B,MAAM6S,+BAA+B/Q,IAhF9C,EAmFEgR,eAAiB,SAACC,GAChB,EAAK/S,MAAMgT,sBAAsBD,IApFrC,EAuFEE,iBAAmB,WACe,aAA5B,EAAKjT,MAAMkT,aACb,EAAKlT,MAAMmT,qBAAqB,+BAEhC,EAAKnT,MAAMmT,qBAAqB,aA3FtC,EA+FEzE,cAAgB,SAAC0E,GACa,EAAKC,KAAKC,mBAGlBnB,gBAAgB,CAClCxH,MAAO,0BAAMyH,cAAY,OAAO7S,UAAU,kBAC1CsH,QAAS,6BAAMuM,GACfnB,MALY,UAMZD,SAAU,KACVK,YAAa,EACbkB,MAAO,SAACC,GACN,EAAKxT,MAAMyT,yBA1GnB,EA+GEhF,YAAc,SAACxH,GACe,EAAKoM,KAAKC,mBAGlBnB,gBAAgB,CAClCxH,MAAO,0BAAMyH,cAAY,OAAO7S,UAAU,iBAC1CsH,QAAS,6BAAMI,GACfgL,MALY,QAMZD,SAAU,KACVK,YAAa,EACbkB,MAAO,SAACC,GACN,EAAKxT,MAAM0T,uBA1HnB,uDA+HE,WACE3T,KAAKC,MAAM2T,2BAA2B5T,KAAKsT,KAAKC,oBAEhDvT,KAAKC,MAAM2S,+BAA+B,4BAC1C5S,KAAKC,MAAM6S,+BAA+B,YAnI9C,gCAsIE,SAAmBnS,GACjB,MAA2BX,KAAKC,MAAxBoT,EAAR,EAAQA,QAASnM,EAAjB,EAAiBA,MACjBmM,GAAWrT,KAAK2O,cAAc0E,GAC9BnM,GAASlH,KAAK0O,YAAYxH,GAGxBhG,OAAOC,WAAa,KACpBR,EAAEkT,QAAQxS,SAASC,WAAaX,EAAEU,SAASC,WACiB,IAA5DwS,SAASC,gBAAgBvU,UAAU+B,QAAQ,aAE3CuS,SAASC,gBAAgBC,UAAUC,OAAO,YAEnB,SAArBtT,EAAEkT,QAAQK,SACZJ,SAASC,gBAAgBI,UAAY,EACrCL,SAASM,iBAAiBD,UAAY,EACtCnU,KAAKsT,KAAKe,UAAUF,UAAY,KArJtC,oBAyJE,WACE,kBAA6CG,GAA7C,GAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAkDxU,KAAKC,MAA/CgI,EAAR,EAAQA,cAAsBlG,GAA9B,EAAuBH,MAAvB,EAA8BG,OAAOiR,EAArC,EAAqCA,SAE/B5Q,EAAS6F,EAAgBuM,EAAkBD,EAC3C/R,EAAWyF,EAAgB,UAAY,QAE7C,OACE,yBAAKzI,UAAU,WACb,kBAAC,IAAD,CAAoBiV,IAAI,qBAAqB7D,MAAOA,WAEpD,kBAAC,EAAD,iBACM5Q,KAAKC,MADX,CAEEmC,OAAQA,EACRR,MAAO8S,IACP3S,MAAOA,EACPiR,SAAUA,KAGZ,yBAAKnR,GAAG,aAAarC,UAAU,aAAaiV,IAAI,aAC9C,kBAAC,IAAD,KACGzU,KAAKuS,UAAUnQ,GAChB,kBAAC,IAAD,CAAU2H,KAAK,IAAItJ,GAAI+B,KAGzB,kBAAC,EAAD,YAlLV,GAA2B6F,IAAMvI,WAyLlBe,gBApOS,SAACC,EAAOb,GAC9B,IAAQ0U,EAAS7T,EAAM6B,OAAfgS,KACR,MAAO,CACLxC,oBAAqBwC,EAAKxC,oBAC1BvQ,MAAO+S,EAAK/S,MACZG,MAAO4S,EAAK5S,MACZiR,SAAU2B,EAAK3B,SACfG,aAAcwB,EAAKxB,aAEnBlL,cAAenH,EAAMmE,IAAIqD,gBACzBpB,MAAOpG,EAAMmE,IAAIiC,MACjBmM,QAASvS,EAAMmE,IAAIoO,YAII,SAACtS,GAAD,MAAe,CACxC6S,2BADwC,SACbL,GACzBxS,EClCoC,SAACwS,GAAD,MAAyB,CAC/D1M,KAAM9B,EAAepC,OAAO4B,2BAC5ByC,QAASuM,GDgCEqB,CAAyBrB,KAEpCX,+BAJwC,SAIThR,GAC7Bb,EChCwC,SAACa,GAAD,MAAY,CACtDiF,KAAM9B,EAAepC,OAAO6B,gCAC5BwC,QAASpF,GD8BEiT,CAA6BjT,KAExCkR,+BAPwC,SAOT/Q,GAC7BhB,EC9BwC,SAACgB,GAAD,MAAY,CACtD8E,KAAM9B,EAAepC,OAAO8B,gCAC5BuC,QAASjF,GD4BE+S,CAA6B/S,KAExCkR,sBAVwC,SAUlB8B,GACpBhU,EC5B+B,SAACgU,GAAD,MAAoB,CACrDlO,KAAM9B,EAAepC,OAAO+B,oCAC5BsC,QAAS+N,GD0BEC,CAAoBD,KAE/B3B,qBAbwC,SAanB6B,GACnBlU,EC1B8B,SAACkU,GAAD,MAAc,CAC9CpO,KAAM9B,EAAepC,OAAOgC,sBAC5BqC,QAASiO,GDwBEC,CAAmBD,KAE9BE,0BAhBwC,WAiBtCpU,ECxB0C,CAC5C8F,KAAM9B,EAAepC,OAAOiC,8BD0B5B8O,mBApBwC,WAqBtC3S,EV0BkC,CACpC8F,KAAM9B,EAAeE,IAAIM,iBUzBzBoO,iBAvBwC,WAwBtC5S,EVegC,CAClC8F,KAAM9B,EAAeE,IAAII,kBU6KZxE,CAA6CkR,I,QE/O/CqD,GAAa,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAACpB,GAQ9C,MAN4B,kBAAnBA,EAAOlN,SACgB,mBAA9BkN,EAAOlN,QAAQuO,aAEfF,EAAMtU,SAASsG,KAGViO,EAAKpB,MCRDsB,GAAgB,SAACH,GAAD,OAAW,SAACC,GAAD,OAAU,SAACpB,GAAY,IAAD,IACtDpT,EAAQuU,EAAMI,WACdC,EAAM,UAAGhQ,aAAaC,QAAQ,wBAAxB,QAA4C,KAClDgQ,EAAS,UAAGjQ,aAAaC,QAAQ,uBAAxB,QAA2C,KAY1D,OAREuO,EAAOrN,MAAQ9B,EAAeE,IAAIC,oBACjCpE,EAAMmE,IAAIqD,iBACD,QAAVoN,GACAC,GAEAN,EAAMtU,SAAS0G,KAGV6N,EAAKpB,MCnBD0B,GAAc,C,MACzBC,EACAL,GACAJ,ICJIU,GAA0B,CAC9B9P,QAAS,CACP+K,SAAU,GACVC,SAAU,GACVjO,KAAM,GACNmO,MAAO,IAET3E,SAAU,CACRzF,QAAS,GACTF,KAAM,CACJ/E,GAAI,GACJkU,OAAQ,KACRhF,SAAU,GACVhO,KAAM,GACNmO,MAAO,KAGX/Q,SAAS,GA2CL6V,GAAyB,CAC7BhQ,QAAS,CACP+K,SAAU,GACVC,SAAU,IAEZzE,SAAU,CACRzF,QAAS,GACTF,KAAM,CACJ/E,GAAI,GACJkU,OAAQ,KACRhF,SAAU,GACVhO,KAAM,GACNmO,MAAO,KAGX/Q,SAAS,GA2CL8V,GAAuB,CAC3BjQ,QAAS,KACTuG,SAAU,CACRzF,QAAS,GACTF,KAAM,CACJ/E,GAAI,GACJkU,OAAQ,KACRhF,SAAU,GACVhO,KAAM,GACNmO,MAAO,KAGX/Q,SAAS,GA0CL+V,GAA0B,CAC9BlQ,QAAS,KACTuG,SAAU,CACRzF,QAAS,GACTF,KAAM,MAERzG,SAAS,GAiDIgW,GAPWC,aAAgB,CACxCnT,YA1MkB,WAA8C,IAA7CnC,EAA4C,uDAApCgV,GAAyB5B,EAAW,uCAC/D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMnB,YAAYC,mBAC1C,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAQ,2BAAMlF,EAAMkF,SAAYkO,EAAOlN,WAE5D,KAAKjC,EAAeC,MAAMZ,MAAMnB,YAAYE,QAC1C,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMnB,YAAYG,OAC1C,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMnB,YAAYI,aAC1C,OAAO,2BACFvC,GADL,IAEEkF,QAAS8P,GAAwB9P,QACjCuG,SAAU2H,EAAOlN,UAGrB,KAAKjC,EAAeC,MAAMZ,MAAMnB,YAAYK,YAC1C,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAMkP,GAAwBvJ,SAAS3F,KACvCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMnB,YAAYM,uBAC1C,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAASgP,GAAwBvJ,SAASzF,YAIhD,QACE,OAAOhG,IAsKX0C,WAjJiB,WAA6C,IAA5C1C,EAA2C,uDAAnCkV,GAAwB9B,EAAW,uCAC7D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMZ,WAAWN,mBACzC,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAQ,2BAAMlF,EAAMkF,SAAYkO,EAAOlN,WAE5D,KAAKjC,EAAeC,MAAMZ,MAAMZ,WAAWL,QACzC,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMZ,WAAWJ,OACzC,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMZ,WAAWH,aACzC,OAAO,2BACFvC,GADL,IAEEkF,QAASgQ,GAAuBhQ,QAChCuG,SAAU2H,EAAOlN,UAGrB,KAAKjC,EAAeC,MAAMZ,MAAMZ,WAAWF,YACzC,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAMoP,GAAuBzJ,SAAS3F,KACtCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMZ,WAAWD,uBACzC,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAASkP,GAAuBzJ,SAASzF,YAI/C,QACE,OAAOhG,IA6GX2C,SA3Fe,WAA2C,IAA1C3C,EAAyC,uDAAjCmV,GAAsB/B,EAAW,uCACzD,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMX,SAASP,mBACvC,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAS,OAE9B,KAAKjB,EAAeC,MAAMZ,MAAMX,SAASN,QACvC,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMX,SAASL,OACvC,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMX,SAASJ,aACvC,OAAO,2BACFvC,GADL,IAEEyL,SAAU2H,EAAOlN,UAGrB,KAAKjC,EAAeC,MAAMZ,MAAMX,SAASH,YACvC,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAMqP,GAAqB1J,SAAS3F,KACpCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMX,SAASF,uBACvC,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAASmP,GAAqB1J,SAASzF,YAI7C,QACE,OAAOhG,IAwDX4C,YA5CkB,WAA8C,IAA7C5C,EAA4C,uDAApCoV,GAAyBhC,EAAW,uCAC/D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMV,YAAYR,mBAC1C,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAS,OAE9B,KAAKjB,EAAeC,MAAMZ,MAAMV,YAAYP,QAC1C,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMV,YAAYN,OAC1C,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMV,YAAYL,aAC1C,OAAO,2BACFvC,GADL,IAEEyL,SAAU2H,EAAOlN,UAGrB,KAAKjC,EAAeC,MAAMZ,MAAMV,YAAYJ,YAC1C,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAMsP,GAAwB3J,SAAS3F,KACvCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMV,YAAYH,uBAC1C,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAASoP,GAAwB3J,SAASzF,YAIhD,QACE,OAAOhG,MCxNPuV,GAA0B,CAC9BrQ,QAAS,CACP4E,MAAO,GACPqB,YAAa,GACbF,SAAU,GACVI,KAAM,GACNnB,WAAW,EACXH,QAAS,IAEX0B,SAAU,CACRzF,QAAS,GACTF,KAAM,CACJyI,IAAK,GACLiH,QAAS,KACT1L,MAAO,GACPqB,YAAa,GACbF,SAAU,GACVI,KAAM,GACNnB,WAAW,EACXH,QAAS,GACT0L,UAAW,GACXC,UAAW,KAGfrW,SAAS,GA2CLsW,GAAwB,CAC5BzQ,QAAS,KACTuG,SAAU,CACRzF,QAAS,GACTF,KAAM,IAERzG,SAAS,GAuCLuW,GAA0B,CAC9B1Q,QAAS,CACP4E,MAAO,GACPqB,YAAa,GACbF,SAAU,GACVI,KAAM,GACNnB,WAAW,EACXH,QAAS,IAEX0B,SAAU,CACRzF,QAAS,GACTF,KAAM,CACJyI,IAAK,GACLiH,QAAS,KACT1L,MAAO,GACPqB,YAAa,GACbF,SAAU,GACVI,KAAM,GACNnB,WAAW,EACXH,QAAS,GACT0L,UAAW,GACXC,UAAW,KAGfrW,SAAS,GA2CLwW,GAA0B,CAC9B3Q,QAAS,KACTuG,SAAU,CACRzF,QAAS,GACTF,KAAM,CACJyI,IAAK,GACLiH,QAAS,KACT1L,MAAO,GACPqB,YAAa,GACbF,SAAU,GACVI,KAAM,GACNnB,WAAW,EACXH,QAAS,GACT0L,UAAW,GACXC,UAAW,KAGfrW,SAAS,GA8CIyW,GAPWR,aAAgB,CACxCxS,YAlNkB,WAA8C,IAA7C9C,EAA4C,uDAApCuV,GAAyBnC,EAAW,uCAC/D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYV,mBAChD,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAQ,2BAAMlF,EAAMkF,SAAYkO,EAAOlN,WAE5D,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYT,QAChD,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYR,OAChD,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYP,aAChD,OAAO,2BACFvC,GADL,IAEEkF,QAASqQ,GAAwBrQ,QACjCuG,SAAU2H,EAAOlN,UAGrB,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYN,YAChD,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAMyP,GAAwB9J,SAAS3F,KACvCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMT,YAAYL,uBAChD,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAASuP,GAAwB9J,SAASzF,YAIhD,QACE,OAAOhG,IA8KX+C,UAlKgB,WAA4C,IAA3C/C,EAA0C,uDAAlC2V,GAAuBvC,EAAW,uCAC3D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMC,MAAMR,UAAUX,mBAC9C,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAS,OAE9B,KAAKjB,EAAeC,MAAMZ,MAAMC,MAAMR,UAAUV,QAC9C,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMR,UAAUT,OAC9C,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMR,UAAUR,aAC9C,OAAO,2BAAKvC,GAAZ,IAAmByL,SAAU2H,EAAOlN,UAEtC,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMR,UAAUP,YAC9C,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAM6P,GAAsBlK,SAAS3F,KACrCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMR,UAAUN,uBAC9C,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAAS2P,GAAsBlK,SAASzF,YAI9C,QACE,OAAOhG,IAkIXgD,YApGkB,WAA8C,IAA7ChD,EAA4C,uDAApC4V,GAAyBxC,EAAW,uCAC/D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYZ,mBAChD,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAQ,2BAAMlF,EAAMkF,SAAYkO,EAAOlN,WAE5D,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYX,QAChD,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYV,OAChD,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYT,aAChD,OAAO,2BACFvC,GADL,IAEEkF,QAAS0Q,GAAwB1Q,QACjCuG,SAAU2H,EAAOlN,UAGrB,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYR,YAChD,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAM8P,GAAwBnK,SAAS3F,KACvCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMP,YAAYP,uBAChD,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAAS4P,GAAwBnK,SAASzF,YAIhD,QACE,OAAOhG,IAgEXiD,YAzCkB,WAA8C,IAA7CjD,EAA4C,uDAApC6V,GAAyBzC,EAAW,uCAC/D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYb,mBAChD,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAS,OAE9B,KAAKjB,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYZ,QAChD,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYX,OAChD,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYV,aAChD,OAAO,2BAAKvC,GAAZ,IAAmByL,SAAU2H,EAAOlN,UAEtC,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYT,YAChD,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAM+P,GAAwBpK,SAAS3F,KACvCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMZ,MAAMC,MAAMN,YAAYR,uBAChD,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAAS6P,GAAwBpK,SAASzF,YAIhD,QACE,OAAOhG,MCjOE+V,GALMT,aAAgB,CACnChS,MAAO+R,GACP9R,MAAOuS,KCHHE,GAA0B,CAC9B9Q,QAAS,CACP4E,MAAO,GACPQ,WAAY,KACZxB,UAAW,CACTG,KAAM,KACNtJ,GAAI,MAENuK,UAAW,KACXH,QAAS,IAEX0B,SAAU,CACRzF,QAAS,GACTF,KAAM,IAERzG,SAAS,GA0CL4W,GAAiC,CACrC/Q,QAAS,KACTuG,SAAU,CACRzF,QAAS,GACTF,KAAM,IAERzG,SAAS,GAyCI6W,GAFUZ,aAAgB,CAAEnS,YArFvB,WAA8C,IAA7CnD,EAA4C,uDAApCgW,GAAyB5C,EAAW,uCAC/D,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMX,MAAMJ,YAAYf,mBAC1C,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAQ,2BAAMlF,EAAMkF,SAAYkO,EAAOlN,WAE5D,KAAKjC,EAAeC,MAAMX,MAAMJ,YAAYd,QAC1C,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMX,MAAMJ,YAAYb,OAC1C,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMX,MAAMJ,YAAYZ,aAC1C,OAAO,2BACFvC,GADL,IAEEyL,SAAU2H,EAAOlN,UAGrB,KAAKjC,EAAeC,MAAMX,MAAMJ,YAAYX,YAC1C,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAMkQ,GAAwBvK,SAAS3F,KACvCE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMX,MAAMJ,YAAYV,uBAC1C,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAASgQ,GAAwBvK,SAASzF,YAIhD,QACE,OAAOhG,IAiD2CoD,mBArC7B,WAAqD,IAApDpD,EAAmD,uDAA3CiW,GAAgC7C,EAAW,uCAC7E,OAAQA,EAAOrN,MACb,KAAK9B,EAAeC,MAAMX,MAAMH,mBAAmBhB,mBACjD,OAAO,2BAAKpC,GAAZ,IAAmBkF,QAAS,OAE9B,KAAKjB,EAAeC,MAAMX,MAAMH,mBAAmBf,QACjD,OAAO,2BAAKrC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMX,MAAMH,mBAAmBd,OACjD,OAAO,2BAAKtC,GAAZ,IAAmBX,SAAS,IAE9B,KAAK4E,EAAeC,MAAMX,MAAMH,mBAAmBb,aACjD,OAAO,2BAAKvC,GAAZ,IAAmByL,SAAU2H,EAAOlN,UAEtC,KAAKjC,EAAeC,MAAMX,MAAMH,mBAAmBZ,YACjD,OAAO,2BACFxC,GADL,IAEEyL,SAAU,CACR3F,KAAMmQ,GAA+BxK,SAAS3F,KAC9CE,QAASoN,EAAOlN,WAItB,KAAKjC,EAAeC,MAAMX,MAAMH,mBAAmBX,uBACjD,OAAO,2BACFzC,GADL,IAEEyL,SAAS,2BACJzL,EAAMyL,UADH,IAENzF,QAASiQ,GAA+BxK,SAASzF,YAIvD,QACE,OAAOhG,MC9FEmW,GAJKb,aAAgB,CAClC/R,MAAO2S,KCKME,GALMd,aAAgB,CACnChS,MAAOyS,GACPvK,KAAM2K,KCHFE,GAAe,GAwCNC,GAJchB,aAAgB,CAC3CzB,KAjCW,WAAmC,IAAlC7T,EAAiC,uDAAzBqW,GAAcjD,EAAW,uCAC7C,OAAQA,EAAOrN,MACb,KAAK9B,EAAeR,2BAClB,OAAO,2BAAKzD,GAAZ,IAAmBqR,oBAAqB+B,EAAOlN,UAEjD,KAAKjC,EAAeP,gCAClB,OAAO,2BAAK1D,GAAZ,IAAmBc,MAAOsS,EAAOlN,UAEnC,KAAKjC,EAAeN,gCAClB,OAAO,2BAAK3D,GAAZ,IAAmBiB,MAAOmS,EAAOlN,UAEnC,KAAKjC,EAAeL,oCAClB,OAAO,2BAAK5D,GAAZ,IAAmBkS,SAAUkB,EAAOlN,UAEtC,KAAKjC,EAAeJ,sBAClB,OAAO,2BAAK7D,GAAZ,IAAmBqS,aAAce,EAAOlN,UAE1C,KAAKjC,EAAeH,2BAClB,OAAO,2BACF9D,GADL,IAEEqR,oBAAqB,KACrBvQ,MAAO,2BACPG,MAAO,QACPiR,UAAU,EACVG,aAAc,gCAGlB,QACE,OAAOrS,MC9BPuW,GAAkB,CACtB/O,iBAAiB,EACjBpB,MAAO,GACPmM,QAAS,IAgDIiE,GANIlB,aAAgB,CACjCnR,IAzCU,WAAsC,IAArCnE,EAAoC,uDAA5BuW,GAAiBnD,EAAW,uCAC/C,OAAQA,EAAOrN,MACb,KAAK9B,EAAeE,IAAIC,kBACtB,OAAO,2BACFpE,GADL,IAEEwH,iBAAiB,IAGrB,KAAKvD,EAAeE,IAAIE,oBACtB,OAAO,2BACFrE,GADL,IAEEwH,iBAAiB,IAGrB,KAAKvD,EAAeE,IAAIG,UACtB,OAAO,2BACFtE,GADL,IAEEoG,MAAOgN,EAAOlN,UAElB,KAAKjC,EAAeE,IAAII,YACtB,OAAO,2BACFvE,GADL,IAEEoG,MAAO,KAGX,KAAKnC,EAAeE,IAAIsS,YACtB,OAAO,2BACFzW,GADL,IAEE0W,QAAStD,EAAOlN,UAEpB,KAAKjC,EAAeE,IAAIwS,cACtB,OAAO,2BACF3W,GADL,IAEE0W,QAAS,KAEb,QACE,OAAO1W,IAMXkE,MAAOkS,GACPvU,OAAQyU,KCnCJ/B,GCbGqC,KAAe,WAAf,cAAmB9B,IAAnB8B,CAAgCC,KAAhCD,CAA6CJ,IDetDpW,OAAOmH,MAAQA,IACfnH,OAAOmU,MAAQA,GAEfnU,OAAOQ,iBAAiB,SATJ,SAACwF,GvBuDM,IAACF,EuBtD1BqO,GAAMtU,UvBsDoBiG,EuBtDCE,EAAMJ,QvBsDM,CACvCD,KAAM9B,EAAeE,IAAIG,UACzB4B,gBuB9CF4Q,IAASpF,OACP,kBAAC,IAAD,CAAU6C,MAAOA,IACf,kBAAC,IAAD,CAAewC,SAAS,IACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrF,OAAQ,SAACvS,GAAD,OAAW,kBAAC,GAAgBA,SAMjD6T,SAASgE,eAAe,U,mBEnC1BC,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,iBCsB3C,IAAIC,EACF/W,OAAOgX,OAAOjX,MAAQ,IACK,EAAtBC,OAAOgX,OAAOjX,MAAa,EAC5BC,OAAOgX,OAAOjX,MAEhB2P,EAAQ,CACVuH,QAAS,GACTC,WAAY,CACVC,aAAc,CACZpG,SAAU,QACVhR,MAAOgX,EACPK,QAAS,sBACTC,OAAQ,KACRC,gBAAiB,GACjBC,aAAc,GACdC,UAAW,GACXC,OAAQ,OACRC,QAAS,eACTC,OAAQ,IACRC,SAAU,OACVC,oBAAqB,cACrBC,WAAY,6CACZC,WAAY,MACZlX,MAAO,WAGTmX,GAAI,CACFC,IAAK,MACLC,OAAQ,OACRC,KAAM,MACNC,MAAO,QAGTC,GAAI,CACFJ,IAAK,MACLC,OAAQ,OACRC,KAAM,OACNC,MAAO,OAGTE,GAAI,CACFL,IAAK,MACLC,OAAQ,OACRK,OAAQ,SACRJ,KAAM,MACNK,YAAczB,EAAe,GAG/B0B,GAAI,CACFR,IAAK,OACLC,OAAQ,MACRC,KAAM,MACNC,MAAO,QAGTM,GAAI,CACFT,IAAK,OACLC,OAAQ,MACRC,KAAM,OACNC,MAAO,OAGTO,GAAI,CACFV,IAAK,OACLC,OAAQ,MACRK,OAAQ,SACRJ,KAAM,MACNK,YAAczB,EAAe,IAIjC6B,iBAAkB,CAChBzB,aAAc,CACZpG,SAAU,WACVhR,MAAO,OACP8Y,OAAQ,UACRC,aAAc,MACdlB,SAAU,OACVW,OAAQ,WACRnB,QAAS,OACTM,QAAS,QACTJ,gBAAiB,aACjBC,aAAc,aACdC,UAAW,aACXuB,QAAS,EACTC,WAAY,uBACZC,gBAAiB,uBACjBC,UAAW,uBACXC,WAAY,qBAEZC,SAAU,CACRL,QAAS,GAGXM,UAAW,CACTN,QAAS,IAIb5G,QAAS,CACPmH,UAAW,EACXC,gBAAiB,UACjBC,gBAAiB,EACjBC,aAAc,EACdC,UAAW,GAGb1T,MAAO,CACLsT,UAAW,EACXC,gBAAiB,UACjBC,gBAAiB,EACjBC,aAAc,EACdC,UAAW,GAGbC,QAAS,CACPL,UAAW,EACXC,gBAAiB,UACjBC,gBAAiB,EACjBC,aAAc,EACdC,UAAW,GAGbE,KAAM,CACJN,UAAW,EACXC,gBAAiB,UACjBC,gBAAiB,EACjBC,aAAc,EACdC,UAAW,IAIf3R,MAAO,CACLoP,aAAc,CACZS,SAAU,OACVW,OAAQ,IACRnB,QAAS,EACTW,WAAY,OACZlX,MAAO,UACP6W,QAAS,QACTS,KAAM,OACNpH,SAAU,WACVkH,IAAK,MACL4B,UAAW,UAIfC,eAAgB,CACd3C,aAAc,CACZqB,WAAY,OACZuB,YAAa,OACb3C,QAAS,aACTvW,MAAO,UACPmZ,cAAe,QAInBC,QAAS,CACP9C,aAAc,CACZW,WAAY,UACZF,SAAU,OACV/W,MAAO,OACPqZ,MAAO,QACPnJ,SAAU,WACVqH,MAAO,OACPH,IAAK,MACL4B,UAAW,QACXN,gBAAiB,UACjB7B,QAAS,QACToB,aAAc,MACdC,QAAS,KACToB,WAAY,OACZpa,MAAO,OACP0X,OAAQ,OACR2C,QAAS,eACTC,UAAW,SACXjD,QAAS,kBACTW,WAAY,MACZS,WAAY,QAGdrG,QAAS,GAKTnM,MAAO,GAKP2T,QAAS,GAKTC,KAAM,IAMRU,OAAQ,CACNnD,aAAc,CACZoD,WAAY,UACZzB,aAAc,MACd1B,QAAS,WACTW,WAAY,OACZQ,OAAQ,aACRZ,OAAQ,GAGVxF,QAAS,CACPoH,gBAAiB,UACjB1Y,MAAO,WAGTmF,MAAO,CACLuT,gBAAiB,UACjB1Y,MAAO,WAGT8Y,QAAS,CACPJ,gBAAiB,UACjB1Y,MAAO,WAGT+Y,KAAM,CACJL,gBAAiB,UACjB1Y,MAAO,YAIX2Z,cAAe,CACbrD,aAAc,CACZoB,OAAQ,EACRnB,QAAS,KAsVfP,EAAOC,QAAU,CACfpH,QACA+K,QA9Uc,CAAC,KAAM,OAAQ,SAAU,UAAW,QA+UlDC,QA9Uc,CACd,CAAC,IAAK,cAAe,UAAW,QAAS,gBACzC,CAAC,IAAK,iBAAkB,UAAW,aAAW,eAC9C,CAAC,IAAK,iBAAkB,UAAW,cAAe,WAClD,CAAC,IAAK,gBAAiB,UAAW,eAAgB,iBAClD,CAAC,IAAK,eAAgB,UAAW,SAAU,6BAC3C,CAAC,IAAK,eAAgB,UAAW,QAAS,eAyU1CC,WAjUiB,CACjB,cACA,YACA,eACA,gBACA,YACA,gBACA,kBACA,mBACA,eACA,YACA,eACA,mBACA,aACA,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UAEFC,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpC,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnC,CAAC,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,OA0FpCK,aAvFiB,CACjBC,IAAK,EACLC,KAAM,IACNC,UAAU,EACV7D,OAAQ,QACR8D,MAAO,CACLC,UAAU,GAEZC,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,aAAc,CACZzD,MAAO,KA2ET0D,gBAxEoB,CACpB,CACE,gCACA,CACEP,MAAO,CACLQ,sBAAuB,SAASvS,GAC9B,OAAOA,EAAM,QAmErBwS,YA7DgB,CAChBhB,MAAO,CAAC,OAAQ,QAAS,qBACzBC,MAAO,CAAC,OAAQ,SAAU,YA4D1BgB,QAxDY,CACZpB,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAwC1DoB,WArCe,CACfC,kBAAmB,GACnBZ,MAAO,CACLC,UAAU,GAEZ/D,OAAQ,SAiCR2E,cA/BkB,CAClB,CACE,gCACA,CACED,kBAAmB,EACnBZ,MAAO,CACLQ,sBAAuB,SAASvS,GAC9B,OAAOA,EAAM,QAyBrB6S,UAnBc,CACdrB,MAAO,CAAC,gBAAiB,gBACzBC,MAAO,CAAC,OAAQ,a","file":"static/js/main.e97c72a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <Container fluid>\r\n          <nav className=\"pull-left\">\r\n            <ul>\r\n              {/* <li>\r\n                <a href=\"#pablo\">Home</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#pablo\">Company</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#pablo\">Portfolio</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#pablo\">Blog</a>\r\n              </li> */}\r\n            </ul>\r\n          </nav>\r\n          <p className=\"copyright pull-right\">\r\n            &copy; {new Date().getFullYear()}{\" \"}\r\n            <a href=\"http://www.touchandpay.me\">Touchandpay</a>\r\n          </p>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, NavItem } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  ...props,\r\n  loading: false\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onLogout() {\r\n  }\r\n});\r\n\r\nclass NavbarLinks extends Component {\r\n  render() {\r\n\r\n    const { onLogout, loading } = this.props;\r\n\r\n    // const notification = (\r\n    //   <div>\r\n    //     <i className=\"fa fa-globe\" />\r\n    //     <b className=\"caret\" />\r\n    //     <span className=\"notification\">5</span>\r\n    //     <p className=\"hidden-lg hidden-md\">Notification</p>\r\n    //   </div>\r\n    // );\r\n\r\n    return (\r\n      <div>\r\n        <Nav>\r\n          <NavItem eventKey={1} href=\"#\">\r\n            <i className=\"fa fa-dashboard\" />\r\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\r\n          </NavItem>\r\n\r\n\r\n\r\n          {/* <NavDropdown\r\n            eventKey={2}\r\n            title={notification}\r\n            noCaret\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\r\n            \r\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\r\n            \r\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\r\n            \r\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\r\n            \r\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\r\n\r\n          </NavDropdown> */}\r\n\r\n          {/* <NavItem eventKey={3} href=\"#\">\r\n            <i className=\"fa fa-search\" />\r\n            <p className=\"hidden-lg hidden-md\">Search</p>\r\n          </NavItem> */}\r\n\r\n          <NavItem eventKey={4} >\r\n            <RingLoader\r\n              size={30}\r\n              loading={loading}\r\n            />\r\n          </NavItem>\r\n\r\n        </Nav>\r\n\r\n        <Nav pullRight>\r\n          <NavItem eventKey={1}>\r\n            <Link to=\"/user\" >Account</Link>\r\n            </NavItem>\r\n\r\n          {/* <NavDropdown\r\n            eventKey={2}\r\n            title=\"Dropdown\"\r\n            id=\"basic-nav-dropdown-right\"\r\n          >\r\n          \r\n            <MenuItem eventKey={2.1}>Action</MenuItem>\r\n          \r\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\r\n          \r\n            <MenuItem eventKey={2.3}>Something</MenuItem>\r\n          \r\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\r\n          \r\n            <MenuItem eventKey={2.5}>Something</MenuItem>\r\n          \r\n            <MenuItem divider />\r\n          \r\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\r\n          </NavDropdown> */}\r\n\r\n          <NavItem\r\n            eventKey={3}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              onLogout();\r\n            }}\r\n          >\r\n            Log out\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavbarLinks);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport NavbarLinks from \"../Navbars/NavbarLinks.jsx\";\r\n\r\nimport logo from \"assets/img/logo.png\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  props,\r\n});\r\n\r\nconst mapDispatchToProps = () => ({});\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      width: window.innerWidth,\r\n    };\r\n  }\r\n\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + this.props.image + \")\",\r\n    };\r\n\r\n    return (\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {/* {this.props.hasImage ? (\r\n          <div className=\"sidebar-background\" style={sidebarBackground} />\r\n        ) : null} */}\r\n        <div className=\"logo\">\r\n          <a href=\"/\" className=\"simple-text logo-mini\">\r\n            <div className=\"logo-img\">\r\n              <img src={logo} alt=\"logo_image\" />\r\n            </div>\r\n          </a>\r\n          <a href=\"/\" className=\"simple-text logo-normal\">\r\n            TechEventsUK\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"sidebar-wrapper\">\r\n          <ul className=\"nav\">\r\n            {this.props.routes.map((prop, key) => {\r\n              if (!prop.redirect)\r\n                return (\r\n                  <li\r\n                    className={\r\n                      prop.upgrade\r\n                        ? \"active active-pro\"\r\n                        : this.activeRoute(prop.layout + prop.path)\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <i className={prop.icon} />\r\n\r\n                      <p>{prop.name}</p>\r\n                    </NavLink>\r\n                  </li>\r\n                );\r\n\r\n              return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","const AdminContants = {\r\n  createAdmin: {\r\n    SET_REQUEST_PARAMS: \"FETCH_ADMIN_CREATE_ADMIN_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_ADMIN_CREATE_ADMIN_LOADING\",\r\n    LOADED: \"FETCH_ADMIN_CREATE_ADMIN_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_ADMIN_CREATE_ADMIN_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_ADMIN_CREATE_ADMIN_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_ADMIN_CREATE_ADMIN_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n  loginAdmin: {\r\n    SET_REQUEST_PARAMS: \"FETCH_ADMIN_LOGIN_ADMIN_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_ADMIN_LOGIN_ADMIN_LOADING\",\r\n    LOADED: \"FETCH_ADMIN_LOGIN_ADMIN_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_ADMIN_LOGIN_ADMIN_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_ADMIN_LOGIN_ADMIN_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_ADMIN_LOGIN_ADMIN_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n  getAdmin: {\r\n    SET_REQUEST_PARAMS: \"FETCH_ADMIN_GET_ADMIN_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_ADMIN_GET_ADMIN_LOADING\",\r\n    LOADED: \"FETCH_ADMIN_GET_ADMIN_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_ADMIN_GET_ADMIN_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_ADMIN_GET_ADMIN_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_ADMIN_GET_ADMIN_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n  logoutAdmin: {\r\n    SET_REQUEST_PARAMS: \"FETCH_ADMIN_LOGOUT_ADMIN_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_ADMIN_LOGOUT_ADMIN_LOADING\",\r\n    LOADED: \"FETCH_ADMIN_LOGOUT_ADMIN_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_ADMIN_LOGOUT_ADMIN_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_ADMIN_LOGOUT_ADMIN_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_ADMIN_LOGOUT_ADMIN_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n};\r\n\r\nexport default AdminContants;\r\n","const AdminEventContants = {\r\n  createEvent: {\r\n    SET_REQUEST_PARAMS: \"FETCH_EVENT_CREATE_EVENT_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_EVENT_CREATE_EVENT_LOADING\",\r\n    LOADED: \"FETCH_EVENT_CREATE_EVENT_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_EVENT_CREATE_EVENT_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_EVENT_CREATE_EVENT_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_EVENT_CREATE_EVENT_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n  getEvents: {\r\n    SET_REQUEST_PARAMS: \"FETCH_EVENT_GET_EVENTS_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_EVENT_GET_EVENTS_LOADING\",\r\n    LOADED: \"FETCH_EVENT_GET_EVENTS_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_EVENT_GET_EVENTS_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_EVENT_GET_EVENTS_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_EVENT_GET_EVENT_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n  updateEvent: {\r\n    SET_REQUEST_PARAMS: \"FETCH_EVENT_UPDATE_EVENT_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_EVENT_UPDATE_EVENT_LOADING\",\r\n    LOADED: \"FETCH_EVENT_UPDATE_EVENT_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_EVENT_UPDATE_EVENT_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_EVENT_UPDATE_EVENT_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_EVENT_UPDATE_EVENT_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n  deleteEvent: {\r\n    SET_REQUEST_PARAMS: \"FETCH_EVENT_DELETE_EVENT_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_EVENT_DELETE_EVENT_LOADING\",\r\n    LOADED: \"FETCH_EVENT_DELETE_EVENT_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_EVENT_DELETE_EVENT_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_EVENT_DELETE_EVENT_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_EVENT_DELETE_EVENT_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n};\r\nexport default AdminEventContants;\r\n","const UserEventContants = {\r\n  searchEvent: {\r\n    SET_REQUEST_PARAMS: \"FETCH_EVENT_SEARCH_EVENT_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_EVENT_SEARCH_EVENT_LOADING\",\r\n    LOADED: \"FETCH_EVENT_SEARCH_EVENT_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_EVENT_SEARCH_EVENT_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_EVENT_SEARCH_EVENT_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_EVENT_SEARCH_EVENT_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n  getEventCategories: {\r\n    SET_REQUEST_PARAMS: \"FETCH_EVENT_GET_EVENT_CATEGORIES_SET_REQUEST_PARAMS\",\r\n    LOADING: \"FETCH_EVENT_GET_EVENT_CATEGORIES_LOADING\",\r\n    LOADED: \"FETCH_EVENT_GET_EVENT_CATEGORIES_LOADED\",\r\n    LOAD_SUCCESS: \"FETCH_EVENT_GET_EVENT_CATEGORIES_LOAD_SUCCESS\",\r\n    LOAD_FAILED: \"FETCH_EVENT_GET_EVENT_CATEGORIES_LOAD_FAILED\",\r\n    CLEAR_RESPONSE_MESSAGE: \"FETCH_EVENT_GET_EVENT_CLEAR_RESPONSE_MESSAGE\",\r\n  },\r\n};\r\nexport default UserEventContants;\r\n","import AdminContants from \"./admin/admin.constants\";\r\nimport AdminEventContants from \"./admin/event.admin.constants\";\r\nimport UserEventContants from \"./user/event.user.constants\";\r\n\r\nconst FetchConstants = {\r\n  /**\r\n   * Admin Constants\r\n   */\r\n  admin: {\r\n    ...AdminContants,\r\n    \r\n    /**\r\n     * Admin Event Constants\r\n     */ event: { ...AdminEventContants },\r\n  },\r\n\r\n  /**\r\n   * User Event Constants\r\n   */\r\n  event: { ...UserEventContants },\r\n};\r\n\r\nexport default FetchConstants;\r\n","const LayoutConstants = {\r\n  CHANGE_NOTIFICATION_SYSTEM: \"CHANGE_NOTIFICATION_SYSTEM\",\r\n\r\n  CHANGE_SIDEBAR_BACKGROUND_IMAGE: \"CHANGE_SIDEBAR_BACKGROUND_IMAGE\",\r\n  CHANGE_SIDEBAR_BACKGROUND_COLOR: \"CHANGE_SIDEBAR_BACKGROUND_COLOR\",\r\n\r\n  TOGGLE_SIDEBAR_HAS_BACKGROUND_IMAGE: \"TOGGLE_SIDEBAR_HAS_BACKGROUND_IMAGE\",\r\n\r\n  CHANGE_FIXED_CLASSESS: \"CHANGE_FIXED_CLASSESS\",\r\n\r\n  RESTORE_ROOT_DEFAULT_STATE: \"RESTORE_ROOT_DEFAULT_STATE\",\r\n\r\n  CHECK_ALL_PENDING_TRANSACTION: \"CHECK_PENDING_TRANSACTION\",\r\n\r\n  TOGGLE_ALL_PENDING: \"CHECK_ALL_PENDING\"\r\n};\r\n\r\nexport default LayoutConstants;\r\n","import FetchConstants from \"./fetch/index.constants\";\r\nimport LayoutConstants from \"./layout/layout.constants\";\r\n\r\n/**\r\n * Single output for all redux constants\r\n */\r\nconst ReduxConstants = {\r\n  /**\r\n   * Fetch Constants\r\n   */\r\n  fetch: { ...FetchConstants },\r\n\r\n  /**\r\n   * Layout Constants\r\n   */\r\n  layout: { ...LayoutConstants },\r\n\r\n  /**\r\n   * App\r\n   */\r\n  app: {\r\n    SET_AUTHENTICATED: \"APP_SET_AUTHENTICATED\",\r\n    UNSET_AUTHENTICATED: \"UNSET_AUTHENTICATED\",\r\n    SET_ERROR: \"APP_SET_ERROR\",\r\n    CLEAR_ERROR: \"APP_CLEAR_ERROR\",\r\n    SET_SUCCESS: \"APP_SET_SUCCESS\",\r\n    CLEAR_SUCCESS: \"APP_CLEAR_SUCCESS\",\r\n  },\r\n};\r\n\r\nexport default ReduxConstants;\r\n","import ReduxConstants from \"../constants/index.constants\";\r\n\r\n//#region Request helpers\r\n/**\r\n * This function setsup the header for all api requests\r\n * It appends the authentication token from staorage\r\n * @returns object\r\n */\r\nexport const headers = () => ({\r\n  Authorization: `Bearer ${localStorage.getItem(\"figfin-token\")}`,\r\n  \"Content-Type\": \"application/json\",\r\n});\r\n\r\nconst port = process.env.PORT ?? 4480;\r\nexport const baseurl = \"http://localhost:\" + port;\r\n\r\n/**\r\n * This method handles all common procedures in fetch actions\r\n * @param {Request} request\r\n * @param {string} actionName\r\n * @param {Dispatch} dispatch\r\n * @returns Promise<object>\r\n */\r\nexport const handleResponse = async (request, actionName = \"\", dispatch) => {\r\n  let fetchConstant = ReduxConstants.fetch;\r\n  fetchConstant = [fetchConstant, ...actionName.split(\".\")].reduce(\r\n    (prev, curr) => prev[curr]\r\n  );\r\n\r\n  return request\r\n    .then((res) => res.json())\r\n    .then((resJson) => {\r\n      const data = resJson.data;\r\n      const type = resJson.type;\r\n      const message = resJson.msg;\r\n\r\n      if (type == \"error\") {\r\n        dispatch({\r\n          type: fetchConstant.LOAD_FAILED,\r\n          payload: message,\r\n        });\r\n\r\n        return resJson;\r\n      }\r\n\r\n      dispatch({\r\n        type: fetchConstant.LOAD_SUCCESS,\r\n        payload: { data, message },\r\n      });\r\n\r\n      return resJson;\r\n    })\r\n    .catch((error) => {\r\n      const errorMessage = error.message;\r\n      dispatch({\r\n        type: fetchConstant.LOAD_FAILED,\r\n        payload: errorMessage,\r\n      });\r\n\r\n      return { type: \"error\", message: errorMessage };\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: fetchConstant.LOADED });\r\n    });\r\n};\r\n\r\n//#endregion\r\n\r\n//#region App\r\nexport const setAppError = (payload) => ({\r\n  type: ReduxConstants.app.SET_ERROR,\r\n  payload,\r\n});\r\nexport const clearAppError = () => ({\r\n  type: ReduxConstants.app.CLEAR_ERROR,\r\n});\r\n\r\nexport const setAppSuccess = (payload) => ({\r\n  type: ReduxConstants.app.SET_SUCCESS,\r\n  payload,\r\n});\r\nexport const clearAppSuccess = () => ({\r\n  type: ReduxConstants.app.CLEAR_SUCCESS,\r\n});\r\n//#endregion\r\n\r\n//#region Admin\r\nexport const setCreateAdminRequestParams = (payload) => ({\r\n  type: ReduxConstants.fetch.admin.createAdmin.SET_REQUEST_PARAMS,\r\n  payload,\r\n});\r\nexport const setLoginAdminRequestParams = (payload) => ({\r\n  type: ReduxConstants.fetch.admin.loginAdmin.SET_REQUEST_PARAMS,\r\n  payload,\r\n});\r\n\r\nexport const logoutLocaly = () => (dispatch) => {\r\n  dispatch({ type: ReduxConstants.app.UNSET_AUTHENTICATED });\r\n  console.log(\"logoutLocaly\");\r\n  localStorage.removeItem(\"figfin-token\");\r\n  localStorage.removeItem(\"figfin-authed\");\r\n};\r\nexport const setAuthState = () => (dispatch) => {\r\n  localStorage.setItem(\"figfin-authed\", \"true\");\r\n  dispatch({ type: ReduxConstants.app.SET_AUTHENTICATED, payload: true });\r\n};\r\n\r\nexport const clearCreateAdminResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.createAdmin.CLEAR_RESPONSE_MESSAGE,\r\n});\r\nexport const clearLoginAdminResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.loginAdmin.CLEAR_RESPONSE_MESSAGE,\r\n});\r\nexport const clearGetAdminResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.getAdmin.CLEAR_RESPONSE_MESSAGE,\r\n});\r\nexport const clearLogoutAdminResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.logoutAdmin.CLEAR_RESPONSE_MESSAGE,\r\n});\r\n//#endregion\r\n\r\n//#region  Admin Event\r\nexport const setAdminCreateEventRequestParams = (payload) => ({\r\n  type: ReduxConstants.fetch.admin.event.createEvent.SET_REQUEST_PARAMS,\r\n  payload,\r\n});\r\nexport const setAdminUpdateEventRequestParams = (payload) => ({\r\n  type: ReduxConstants.fetch.admin.event.updateEvent.SET_REQUEST_PARAMS,\r\n  payload,\r\n});\r\n\r\nexport const clearAdminCreateEventResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.event.createEvent.CLEAR_RESPONSE_MESSAGE,\r\n});\r\nexport const clearAdminGetEventsResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.event.getEvents.CLEAR_RESPONSE_MESSAGE,\r\n});\r\nexport const clearAdminUpdateEventResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.event.updateEvent.CLEAR_RESPONSE_MESSAGE,\r\n});\r\nexport const clearAdminDeleteEventResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.admin.event.deleteEvent.CLEAR_RESPONSE_MESSAGE,\r\n});\r\n//#endregion\r\n\r\n//#region User Event\r\nexport const setUserSearchEventRequestParams = (payload) => ({\r\n  type: ReduxConstants.fetch.event.searchEvent.SET_REQUEST_PARAMS,\r\n  payload,\r\n});\r\n\r\nexport const clearUserSearchEventResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.event.searchEvent.CLEAR_RESPONSE_MESSAGE,\r\n});\r\nexport const clearUserGetEventCategoriesResponseMessage = () => ({\r\n  type: ReduxConstants.fetch.event.getEventCategories.CLEAR_RESPONSE_MESSAGE,\r\n});\r\n//#endregion\r\n","import ReduxConstants from \"../../../constants/index.constants\";\r\nimport {\r\n  baseurl,\r\n  handleResponse,\r\n  headers,\r\n  logoutLocaly,\r\n  setAuthState,\r\n} from \"../../index.actions\";\r\n\r\n/**\r\n * This function appends module specific settings before handing over\r\n * @param {Request} request\r\n * @param {strign} actionName\r\n * @param {Dispatch} dispatch\r\n * @returns Promise<array>\r\n */\r\nconst handleAdminRequest = async (request, actionName, dispatch) => {\r\n  return handleResponse(request, \"admin.\" + actionName, dispatch);\r\n};\r\n\r\nexport const createAdmin =\r\n  ({ username, password, name, email }) =>\r\n  (dispatch) => {\r\n    dispatch({ type: ReduxConstants.fetch.admin.createAdmin.LOADING });\r\n\r\n    return handleAdminRequest(\r\n      fetch(`${baseurl}/v1/admins/create/admin`, {\r\n        headers: headers(),\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          data: {\r\n            username,\r\n            password,\r\n            name,\r\n            email,\r\n          },\r\n        }),\r\n      }),\r\n      \"createAdmin\",\r\n      dispatch\r\n    );\r\n  };\r\n\r\nexport const loginAdmin =\r\n  ({ username, password }) =>\r\n  (dispatch) => {\r\n    dispatch({ type: ReduxConstants.fetch.admin.loginAdmin.LOADING });\r\n\r\n    return handleAdminRequest(\r\n      fetch(`${baseurl}/v1/admins/login/admin`, {\r\n        headers: headers(),\r\n        method: \"POST\",\r\n        body: JSON.stringify({ data: { username, password } }),\r\n      }),\r\n      \"loginAdmin\",\r\n      dispatch\r\n    ).then((resJon) => {\r\n      //handle token storage and authentication process\r\n      if (resJon.extra && resJon.extra.token) {\r\n        const token = resJon.extra.token ?? \"\";\r\n\r\n        localStorage.setItem(\"figfin-token\", token);\r\n\r\n        dispatch(setAuthState());\r\n      }\r\n    });\r\n  };\r\n\r\nexport const getAdmin = () => (dispatch) => {\r\n  dispatch({ type: ReduxConstants.fetch.admin.getAdmin.LOADING });\r\n\r\n  return handleAdminRequest(\r\n    fetch(`${baseurl}/v1/admins/get/admin`, {\r\n      headers: headers(),\r\n      method: \"GET\",\r\n    }),\r\n    \"getAdmin\",\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const logoutAdmin = () => (dispatch) => {\r\n  dispatch({ type: ReduxConstants.fetch.admin.logoutAdmin.LOADING });\r\n\r\n  return handleAdminRequest(\r\n    fetch(`${baseurl}/v1/admins/logout/admin`, {\r\n      headers: headers(),\r\n      method: \"POST\",\r\n    }),\r\n    \"logoutAdmin\",\r\n    dispatch\r\n  ).then((resJson) => {\r\n    \r\n    //Invalidate locally stored token\r\n    dispatch(logoutLocaly());\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutAdmin } from \"../../redux/actions/fetch/admin/admin.actions\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    authenticated: state.app.isAuthenticated,\r\n    adminLogoutResponseLoading: state.fetch.admin.admin.logoutAdmin.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  invokeLogoutAdmin() {\r\n    dispatch(logoutAdmin());\r\n  },\r\n});\r\n\r\nclass Header extends React.Component {\r\n  /**\r\n   * This method renders the Logout button label\r\n   * @returns JSX\r\n   */\r\n  renderLogoutButtonLabel() {\r\n    const { adminLogoutResponseLoading } = this.props;\r\n\r\n    return adminLogoutResponseLoading ? (\r\n      <span>\r\n        <span className=\"text-primary me-2\">Logout...</span>\r\n        <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n      </span>\r\n    ) : (\r\n      <span>Logout</span>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { authenticated, invokeLogoutAdmin } = this.props;\r\n\r\n    return (\r\n      <div className=\"d-flex align-items-end justify-content-end\">\r\n        {authenticated ? (\r\n          <Button\r\n            variant=\"light\"\r\n            type=\"button\"\r\n            className=\"mb-2\"\r\n            onClick={invokeLogoutAdmin}\r\n          >\r\n            {this.renderLogoutButtonLabel()}\r\n          </Button>\r\n        ) : (\r\n          <p className=\"text-end text-muted font-monospace\">\r\n            <a href=\"/login\">Signup or Login</a>\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport { Card, Col, Placeholder, Row } from \"react-bootstrap\";\r\n\r\n/**\r\n * This component renders the placeholders for event list\r\n */\r\nclass EventPlaceholder extends React.Component {\r\n  render() {\r\n    return [{}, {}, {}, {}].map((event, i) => (\r\n      <Row key={i}>\r\n        <Col>\r\n          <Card className=\"text-left\">\r\n            <Placeholder as={Card.Header} animation=\"glow\">\r\n              <Placeholder xs={2} />\r\n            </Placeholder>\r\n\r\n            <Card.Body>\r\n              <Placeholder as={Card.Title} animation=\"glow\">\r\n                <Placeholder xs={5} />\r\n              </Placeholder>\r\n\r\n              <Placeholder as={Card.Text} animation=\"glow\">\r\n                <Placeholder xs={7} /> <Placeholder xs={4} />{\" \"}\r\n                <Placeholder xs={4} /> <Placeholder xs={6} />{\" \"}\r\n                <Placeholder xs={8} />\r\n              </Placeholder>\r\n\r\n              <Placeholder as={Card.Text} animation=\"glow\">\r\n                <Placeholder xs={5} />\r\n              </Placeholder>\r\n\r\n              <Placeholder as={Card.Text} animation=\"glow\">\r\n                <Placeholder xs={9} />\r\n              </Placeholder>\r\n            </Card.Body>\r\n\r\n            <Placeholder as={Card.Footer} animation=\"glow\">\r\n              <Placeholder xs={7} />\r\n            </Placeholder>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default EventPlaceholder;\r\n","import ReduxConstants from \"../../../constants/index.constants\";\r\nimport { baseurl, handleResponse, headers } from \"../../index.actions\";\r\n\r\n/**\r\n * This function appends module specific settings before handing over\r\n * @param {Request} request\r\n * @param {strign} actionName\r\n * @param {Dispatch} dispatch\r\n * @returns Promise<array>\r\n */\r\nconst handleEventRequest = async (request, actionName, dispatch) => {\r\n  return handleResponse(request, \"event.\" + actionName, dispatch);\r\n};\r\n\r\nexport const searchEvent =\r\n  ({ title, categories, dateRange, isVirtual, address }) =>\r\n  (dispatch) => {\r\n    dispatch({ type: ReduxConstants.fetch.event.searchEvent.LOADING });\r\n\r\n    return handleEventRequest(\r\n      fetch(`${baseurl}/v1/events/search/event`, {\r\n        headers: headers(),\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          data: {\r\n            title,\r\n            categories,\r\n            dateRange,\r\n            isVirtual,\r\n            address,\r\n          },\r\n        }),\r\n      }),\r\n      \"searchEvent\",\r\n      dispatch\r\n    );\r\n  };\r\n\r\nexport const getEventCategories = () => (dispatch) => {\r\n  dispatch({ type: ReduxConstants.fetch.event.getEventCategories.LOADING });\r\n\r\n  return handleEventRequest(\r\n    fetch(`${baseurl}/v1/events/get/event-categories`, {\r\n      headers: headers(),\r\n      method: \"GET\",\r\n    }),\r\n    \"getEventCategories\",\r\n    dispatch\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  FloatingLabel,\r\n  Form,\r\n  Row,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../components/Header/Header\";\r\nimport EventPlaceholder from \"../components/Placeholder/EventPlaceholder\";\r\nimport {\r\n  getEventCategories,\r\n  searchEvent,\r\n} from \"../redux/actions/fetch/user/event.user.action\";\r\nimport { setUserSearchEventRequestParams } from \"../redux/actions/index.actions\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    searchEventRequest: state.fetch.user.event.searchEvent.request,\r\n    searchEventIsLoading: state.fetch.user.event.searchEvent.loading,\r\n    searchEventResponseMessage:\r\n      state.fetch.user.event.searchEvent.response.message,\r\n    searchEventResponse: state.fetch.user.event.searchEvent.response.data,\r\n\r\n    getEventCategoriesIsLoading:\r\n      state.fetch.user.event.getEventCategories.loading,\r\n    getEventCategoriesResponse:\r\n      state.fetch.user.event.getEventCategories.response.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  invokeSetSearchEventParams({ categories, ...payload }) {\r\n    if (Array.isArray(categories) && !categories.length) {\r\n      categories = null;\r\n    }\r\n    dispatch(setUserSearchEventRequestParams({ categories, ...payload }));\r\n  },\r\n  invokeSearchEvent({ title, categories, from, to, isVirtual, address }) {\r\n    dispatch(\r\n      searchEvent({\r\n        title,\r\n        categories,\r\n        dateRange: { from, to },\r\n        isVirtual,\r\n        address,\r\n      })\r\n    );\r\n  },\r\n  invokeGetEventCategories() {\r\n    dispatch(getEventCategories());\r\n  },\r\n});\r\n\r\nclass Home extends React.Component {\r\n  componentDidMount() {\r\n    //get all events and event categories\r\n    this.props.invokeGetEventCategories();\r\n    this.props.invokeSearchEvent({\r\n      title: \"\",\r\n      categories: null,\r\n      from: null,\r\n      to: null,\r\n      isVirtual: null,\r\n      address: \"\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This methods converts any date format to the input date accepted format\r\n   * @param {string} dateString\r\n   * @returns string\r\n   */\r\n  getInputDateFormat(dateString) {\r\n    const month = new Date(dateString).getUTCMonth();\r\n    const fullMonth = month < 10 ? \"0\" + month : month;\r\n\r\n    return (\r\n      new Date(dateString).getFullYear() +\r\n      \"-\" +\r\n      fullMonth +\r\n      \"-\" +\r\n      new Date(dateString).getDate()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method renders the search panel\r\n   * @returns JSX\r\n   */\r\n  renderSearchArea = () => {\r\n    const {\r\n      searchEventRequest,\r\n      searchEventIsLoading,\r\n      searchEventResponseMessage,\r\n      getEventCategoriesResponse,\r\n\r\n      invokeSetSearchEventParams,\r\n      invokeSearchEvent,\r\n      invokeGetEventCategories,\r\n    } = this.props;\r\n\r\n    const dateRange = searchEventRequest.dateRange;\r\n    const dateFromValue = dateRange.from\r\n      ? this.getInputDateFormat(dateRange.from)\r\n      : \"\";\r\n    const dateToValue = dateRange.to\r\n      ? this.getInputDateFormat(dateRange.to)\r\n      : \"\";\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Accordion>\r\n            <Accordion.Item eventKey=\"0\">\r\n              <Accordion.Header>Search Menu</Accordion.Header>\r\n              <Accordion.Body>\r\n                <Form>\r\n                  <Row>\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"searchTitle\"\r\n                        label=\"Title\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            const value = e.currentTarget.value;\r\n                            invokeSetSearchEventParams({ title: value });\r\n                          }}\r\n                          value={searchEventRequest.title}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"searchAddress\"\r\n                        label=\"Address\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            const value = e.currentTarget.value;\r\n                            invokeSetSearchEventParams({ address: value });\r\n                          }}\r\n                          value={searchEventRequest.address}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"Date-range\"\r\n                        label=\"From date\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"date\"\r\n                          onChange={(e) => {\r\n                            let value = e.currentTarget.value;\r\n                            value = value ? new Date(value).valueOf() : value;\r\n\r\n                            invokeSetSearchEventParams({\r\n                              dateRange: {\r\n                                ...searchEventRequest.dateRange,\r\n                                from: value,\r\n                              },\r\n                            });\r\n                          }}\r\n                          value={dateFromValue}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"Date-range\"\r\n                        label=\"To date\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"date\"\r\n                          onChange={(e) => {\r\n                            const value = e.currentTarget.value;\r\n                            invokeSetSearchEventParams({\r\n                              dateRange: {\r\n                                ...searchEventRequest.dateRange,\r\n                                to: value,\r\n                              },\r\n                            });\r\n                          }}\r\n                          value={dateToValue}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Check\r\n                        type=\"switch\"\r\n                        id={\"is-virtual-switch\"}\r\n                        label={\"Virtual event\"}\r\n                        onChange={(e) => {\r\n                          invokeSetSearchEventParams({\r\n                            isVirtual: !searchEventRequest.isVirtual,\r\n                          });\r\n                        }}\r\n                        checked={searchEventRequest.isVirtual ?? false}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"mt-3\">\r\n                    <Col>\r\n                      <div>\r\n                        <h5>Interests</h5>\r\n                        {getEventCategoriesResponse.map((eventCategory, i) => (\r\n                          <Form.Check\r\n                            key={i}\r\n                            type=\"switch\"\r\n                            id={\"event-category-switch-\" + i}\r\n                            label={eventCategory.name}\r\n                            inline\r\n                            // checked={searchEventRequest.categories[i]}\r\n                            onChange={(e) => {\r\n                              const checked = e.currentTarget.checked;\r\n                              const categories =\r\n                                searchEventRequest.categories ?? [];\r\n                              if (checked) {\r\n                                invokeSetSearchEventParams({\r\n                                  categories: [\r\n                                    ...categories,\r\n                                    eventCategory.name,\r\n                                  ],\r\n                                });\r\n                              } else {\r\n                                invokeSetSearchEventParams({\r\n                                  categories: categories.filter(\r\n                                    (filterValue) =>\r\n                                      filterValue !== eventCategory.name\r\n                                  ),\r\n                                });\r\n                              }\r\n                            }}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button\r\n                    className=\"mt-3 \"\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                    disabled={searchEventIsLoading}\r\n                    onClick={() => {\r\n                      invokeSearchEvent(searchEventRequest);\r\n                    }}\r\n                  >\r\n                    {searchEventIsLoading ? (\r\n                      <span>\r\n                        <span className=\"text-primary me-2\">Searching</span>\r\n                        <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n                      </span>\r\n                    ) : (\r\n                      <span>Search for events</span>\r\n                    )}\r\n                  </Button>\r\n                </Form>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * This method renders all events\r\n   * @returns JSX\r\n   */\r\n  renderEvents() {\r\n    const { searchEventResponse, searchEventIsLoading } = this.props;\r\n\r\n    const eventViews = searchEventResponse.map((event, i) => (\r\n      <Row key={i}>\r\n        <Col>\r\n          <Card className=\"text-left\">\r\n            <Card.Header>{event.category}</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title className=\"h3\">\r\n                {event.title.toLocaleUpperCase()}\r\n              </Card.Title>\r\n              <Card.Text>{event.description.toLocaleLowerCase()}</Card.Text>\r\n\r\n              <Card.Text className=\"text-muted\">\r\n                {event.isVirtual\r\n                  ? \"This is a virtual event\"\r\n                  : \"This is a physical event\"}\r\n              </Card.Text>\r\n\r\n              <Card.Text className=\"test-info\">\r\n                Address: {event.address}\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">\r\n              {new Date(event.date).toDateString()}\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <h3 className=\"font-monospace\">Events</h3>\r\n        <div>{searchEventIsLoading ? <EventPlaceholder /> : eventViews}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Container className=\"mb-2\">\r\n          <Header />\r\n          {this.renderSearchArea()}\r\n        </Container>\r\n        <Container fluid>{this.renderEvents()}</Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import ReduxConstants from \"../../../constants/index.constants\";\r\nimport { baseurl, handleResponse, headers } from \"../../index.actions\";\r\n\r\n/**\r\n * This function appends module specific settings before handing over\r\n * @param {Request} request\r\n * @param {strign} actionName\r\n * @param {Dispatch} dispatch\r\n * @returns Promise<array>\r\n */\r\nconst handleEventRequest = async (request, actionName, dispatch) => {\r\n  return handleResponse(request, \"admin.event.\" + actionName, dispatch);\r\n};\r\n\r\nexport const createEvent =\r\n  ({ title, description, category, date, isVirtual, address }) =>\r\n  (dispatch) => {\r\n    dispatch({ type: ReduxConstants.fetch.admin.event.createEvent.LOADING });\r\n\r\n    return handleEventRequest(\r\n      fetch(`${baseurl}/v1/admins/events/create/event`, {\r\n        headers: headers(),\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          data: {\r\n            title,\r\n            description,\r\n            category,\r\n            date,\r\n            isVirtual,\r\n            address,\r\n          },\r\n        }),\r\n      }),\r\n      \"createEvent\",\r\n      dispatch\r\n    ).then(() => {\r\n      //get an updated list of the admin's events\r\n      dispatch(getEvents());\r\n    });\r\n  };\r\n\r\nexport const getEvents = () => (dispatch) => {\r\n  dispatch({ type: ReduxConstants.fetch.admin.event.getEvents.LOADING });\r\n\r\n  return handleEventRequest(\r\n    fetch(`${baseurl}/v1/admins/events/get/events`, {\r\n      headers: headers(),\r\n      method: \"GET\",\r\n    }),\r\n    \"getEvents\",\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const updateEvent =\r\n  (id, { title, description, category, date, isVirtual, address }) =>\r\n  (dispatch) => {\r\n    dispatch({ type: ReduxConstants.fetch.admin.event.updateEvent.LOADING });\r\n\r\n    return handleEventRequest(\r\n      fetch(`${baseurl}/v1/admins/events/update/event/${id}`, {\r\n        headers: headers(),\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({\r\n          data: { title, description, category, date, isVirtual, address },\r\n        }),\r\n      }),\r\n      \"updateEvent\",\r\n      dispatch\r\n    ).then(() => {\r\n      //get an updated list of the admin's events\r\n      dispatch(getEvents());\r\n    });\r\n  };\r\n\r\nexport const deleteEvent = (id) => (dispatch) => {\r\n  dispatch({ type: ReduxConstants.fetch.admin.event.deleteEvent.LOADING });\r\n\r\n  return handleEventRequest(\r\n    fetch(`${baseurl}/v1/admins/events/delete/event/${id}`, {\r\n      headers: headers(),\r\n      method: \"DELETE\",\r\n    }),\r\n    \"deleteEvent\",\r\n    dispatch\r\n  ).then(() => {\r\n    //get an updated list of the admin's events\r\n    dispatch(getEvents());\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  FloatingLabel,\r\n  Form,\r\n  Row,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../components/Header/Header\";\r\nimport EventPlaceholder from \"../components/Placeholder/EventPlaceholder\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getEvents,\r\n  updateEvent,\r\n} from \"../redux/actions/fetch/admin/event.admin.action\";\r\nimport {\r\n  clearAdminCreateEventResponseMessage,\r\n  clearAdminDeleteEventResponseMessage,\r\n  clearAdminUpdateEventResponseMessage,\r\n  setAdminCreateEventRequestParams,\r\n  setAdminUpdateEventRequestParams,\r\n} from \"../redux/actions/index.actions\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    getEventsIsLoading: state.fetch.admin.event.getEvents.loading,\r\n    getEventsResponseMessage:\r\n      state.fetch.admin.event.getEvents.response.message,\r\n    getEventsResponse: state.fetch.admin.event.getEvents.response.data,\r\n\r\n    createEventRequest: state.fetch.admin.event.createEvent.request,\r\n    createEventIsLoading: state.fetch.admin.event.createEvent.loading,\r\n    createEventResponseMessage:\r\n      state.fetch.admin.event.createEvent.response.message,\r\n    createEventResponse: state.fetch.admin.event.createEvent.response.data,\r\n\r\n    updateEventRequest: state.fetch.admin.event.updateEvent.request,\r\n    updateEventIsLoading: state.fetch.admin.event.updateEvent.loading,\r\n    updateEventResponseMessage:\r\n      state.fetch.admin.event.updateEvent.response.message,\r\n    updateEventResponse: state.fetch.admin.event.updateEvent.response.data,\r\n\r\n    deleteEventIsLoading: state.fetch.admin.event.deleteEvent.loading,\r\n    deleteEventResponseMessage:\r\n      state.fetch.admin.event.deleteEvent.response.message,\r\n    deleteEventResponse: state.fetch.admin.event.deleteEvent.response.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  invokeAdminGetEvent() {\r\n    dispatch(getEvents());\r\n  },\r\n\r\n  invokeSetAdminCreateEventParams(payload) {\r\n    dispatch(setAdminCreateEventRequestParams(payload));\r\n  },\r\n  invokeAdminCreateEvent(payload) {\r\n    dispatch(createEvent(payload));\r\n  },\r\n  invokeClearAdminCreateEventResponseMessage() {\r\n    dispatch(clearAdminCreateEventResponseMessage());\r\n  },\r\n\r\n  invokeSetAdminUpdateEventParams(payload) {\r\n    dispatch(setAdminUpdateEventRequestParams(payload));\r\n  },\r\n  invokeAdminUpdateEvent(payload) {\r\n    dispatch(updateEvent(payload._id, payload));\r\n  },\r\n  invokeClearAdminUpdateEventResponseMessage() {\r\n    dispatch(clearAdminUpdateEventResponseMessage());\r\n  },\r\n\r\n  invokeAdminDeleteEvent(id) {\r\n    dispatch(deleteEvent(id));\r\n  },\r\n  invokeClearAdminDeleteEventResponseMessage() {\r\n    dispatch(clearAdminDeleteEventResponseMessage());\r\n  },\r\n});\r\n\r\nclass Events extends React.Component {\r\n  state = {\r\n    isCreate: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    //get all admin's events\r\n    this.props.invokeAdminGetEvent();\r\n  }\r\n\r\n  chnageToCreateMode() {\r\n    this.setState({ isCreate: true });\r\n  }\r\n\r\n  chnageToUpdateMode() {\r\n    this.setState({ isCreate: false });\r\n  }\r\n\r\n  updateEvent(event) {\r\n    this.chnageToUpdateMode();\r\n    //set the select event (for update) details to the request parasms state\r\n    this.props.invokeSetAdminUpdateEventParams(event);\r\n\r\n    //scroll to the edit form\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  deleteEvent(id) {\r\n    const { invokeAdminDeleteEvent } = this.props;\r\n\r\n    //double check if you really want to delete this event\r\n    if (!window.confirm(\"Are you sure you want to delete this event ? \")) {\r\n      return null;\r\n    }\r\n\r\n    //delete event\r\n    invokeAdminDeleteEvent(id);\r\n  }\r\n\r\n  /**\r\n   * This methods converts any date format to the input date accepted format\r\n   * @param {string} dateString\r\n   * @returns string\r\n   */\r\n  getInputDateFormat(dateString) {\r\n    const month = new Date(dateString).getUTCMonth();\r\n    const fullMonth = month < 10 ? \"0\" + month : month;\r\n\r\n    return (\r\n      new Date(dateString).getFullYear() +\r\n      \"-\" +\r\n      fullMonth +\r\n      \"-\" +\r\n      new Date(dateString).getDate()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This function handles the creation and updating of events\r\n   * @returns JSX\r\n   */\r\n  renderCreateEvent = () => {\r\n    const {\r\n      createEventRequest,\r\n      createEventIsLoading,\r\n      createEventResponseMessage,\r\n      createEventResponse,\r\n\r\n      updateEventRequest,\r\n      updateEventIsLoading,\r\n      updateEventResponseMessage,\r\n      updateEventResponse,\r\n\r\n      deleteEventResponseMessage,\r\n      deleteEventResponse,\r\n\r\n      invokeSetAdminCreateEventParams,\r\n      invokeAdminCreateEvent,\r\n\r\n      invokeSetAdminUpdateEventParams,\r\n      invokeAdminUpdateEvent,\r\n\r\n      invokeClearAdminCreateEventResponseMessage,\r\n      invokeClearAdminUpdateEventResponseMessage,\r\n      invokeClearAdminDeleteEventResponseMessage,\r\n    } = this.props;\r\n    const { isCreate } = this.state;\r\n\r\n    //select params and methods based on the current mode (create or update)\r\n    const request = isCreate ? createEventRequest : updateEventRequest;\r\n    const loading = isCreate ? createEventIsLoading : updateEventIsLoading;\r\n    const responseMessage = isCreate\r\n      ? createEventResponseMessage\r\n      : updateEventResponseMessage;\r\n    const response = isCreate ? createEventResponse : updateEventResponse;\r\n\r\n    const setRequestParams = isCreate\r\n      ? invokeSetAdminCreateEventParams\r\n      : invokeSetAdminUpdateEventParams;\r\n    const invokeEventAction = isCreate\r\n      ? invokeAdminCreateEvent\r\n      : invokeAdminUpdateEvent;\r\n    const invokeClearEventAction = isCreate\r\n      ? invokeClearAdminCreateEventResponseMessage\r\n      : invokeClearAdminUpdateEventResponseMessage;\r\n\r\n    //convert the unix date format from state to input acceptable format\r\n    const eventDate = this.getInputDateFormat(request.date);\r\n\r\n    const header = isCreate ? \"Create event\" : \"Update event\";\r\n\r\n    //diplay response error message\r\n    if (responseMessage && !response.title) {\r\n      //clear error response message\r\n      invokeClearEventAction();\r\n      //display error response message\r\n      this.props.handleError(responseMessage);\r\n    }\r\n    //diplay response success message\r\n    else if (responseMessage && response.title) {\r\n      //clear success response message\r\n      invokeClearEventAction();\r\n      //display success response message\r\n      this.props.handleSuccess(responseMessage);\r\n      this.chnageToCreateMode();\r\n    }\r\n\r\n    //diplay response error message\r\n    if (deleteEventResponseMessage && !deleteEventResponse.title) {\r\n      invokeClearAdminDeleteEventResponseMessage();\r\n      this.props.handleError(deleteEventResponseMessage);\r\n    }\r\n    //diplay response success message\r\n    else if (deleteEventResponseMessage && deleteEventResponse.title) {\r\n      invokeClearAdminDeleteEventResponseMessage();\r\n      this.props.handleSuccess(deleteEventResponseMessage);\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Accordion defaultActiveKey=\"0\">\r\n            <Accordion.Item eventKey=\"0\">\r\n              <Accordion.Header>{header}</Accordion.Header>\r\n\r\n              <Accordion.Body>\r\n                <Form>\r\n                  <Row>\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"eventTitle\"\r\n                        label=\"Title\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            const value = e.currentTarget.value;\r\n                            setRequestParams({ title: value });\r\n                          }}\r\n                          value={request.title}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"eventDescription\"\r\n                        label=\"Description\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            const value = e.currentTarget.value;\r\n                            setRequestParams({ description: value });\r\n                          }}\r\n                          value={request.description}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"eventCategory\"\r\n                        label=\"Category\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            const value = e.currentTarget.value;\r\n                            setRequestParams({ category: value });\r\n                          }}\r\n                          value={request.category}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"eventAddress\"\r\n                        label=\"Address\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            const value = e.currentTarget.value;\r\n                            setRequestParams({ address: value });\r\n                          }}\r\n                          value={request.address}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FloatingLabel\r\n                        controlId=\"eventDate\"\r\n                        label=\"Date\"\r\n                        className=\"mb-2\"\r\n                      >\r\n                        <Form.Control\r\n                          type=\"date\"\r\n                          onChange={(e) => {\r\n                            let value = e.currentTarget.value;\r\n                            value = value ? new Date(value).valueOf() : value;\r\n                            setRequestParams({ date: value });\r\n                          }}\r\n                          value={eventDate}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <Form.Check\r\n                        type=\"switch\"\r\n                        id={\"is-virtual-switch\"}\r\n                        label={\"Virtual event\"}\r\n                        onChange={(e) => {\r\n                          setRequestParams({\r\n                            isVirtual: !request.isVirtual,\r\n                          });\r\n                        }}\r\n                        checked={request.isVirtual ?? false}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <Button\r\n                      className=\"mt-3 \"\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      disabled={loading}\r\n                      onClick={() => {\r\n                        invokeEventAction(request);\r\n                      }}\r\n                    >\r\n                      {loading ? (\r\n                        <span>\r\n                          <span className=\"text-primary me-2\">\r\n                            {isCreate ? \"Creating\" : \"Updating\"}\r\n                          </span>\r\n                          <Spinner\r\n                            animation=\"grow\"\r\n                            variant=\"primary\"\r\n                            size=\"sm\"\r\n                          />\r\n                        </span>\r\n                      ) : (\r\n                        <span>{isCreate ? \"Create\" : \"Update\"}</span>\r\n                      )}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className=\"mt-3 ms-3\"\r\n                      variant=\"secondary\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        //reset request params\r\n                        setRequestParams({\r\n                          title: \"\",\r\n                          description: \"\",\r\n                          category: \"\",\r\n                          date: \"\",\r\n                          isVirtual: false,\r\n                          address: \"\",\r\n                        });\r\n\r\n                        //change to create mode\r\n                        this.chnageToCreateMode();\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * This method renders all the admin's events\r\n   * @returns JSX\r\n   */\r\n  renderEvents() {\r\n    const { getEventsResponse, getEventsIsLoading } = this.props;\r\n\r\n    const eventViews = getEventsResponse.map((event, i) => (\r\n      <Row key={i}>\r\n        <Col>\r\n          <Card className=\"\">\r\n            <Card.Header>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <span> {event.category}</span>\r\n\r\n                <span>\r\n                  <span className=\"me-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-light\"\r\n                      onClick={() => this.updateEvent(event)}\r\n                    >\r\n                      <i className=\"fa fa-edit text-info\"></i>\r\n                    </button>\r\n                  </span>\r\n                  <span>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-light\"\r\n                      onClick={() => this.deleteEvent(event._id)}\r\n                    >\r\n                      <i className=\"fa fa-trash text-danger\"></i>\r\n                    </button>\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </Card.Header>\r\n\r\n            <Card.Body>\r\n              <Card.Title className=\"h3\">\r\n                {event.title.toLocaleUpperCase()}\r\n              </Card.Title>\r\n\r\n              <Card.Text>{event.description.toLocaleLowerCase()}</Card.Text>\r\n\r\n              <Card.Text className=\"text-muted\">\r\n                {event.isVirtual\r\n                  ? \"This is a virtual event\"\r\n                  : \"This is a physical event\"}\r\n              </Card.Text>\r\n\r\n              <Card.Text className=\"test-info\">\r\n                Address: {event.address}\r\n              </Card.Text>\r\n            </Card.Body>\r\n\r\n            <Card.Footer className=\"text-muted\">\r\n              {new Date(event.date).toDateString()}\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <h3 className=\"font-monospace\">Your events</h3>\r\n        <div>{getEventsIsLoading ? <EventPlaceholder /> : eventViews}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {} = this.props;\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <Container className=\"mb-2\">\r\n          <Header />\r\n          {this.renderCreateEvent()}\r\n        </Container>\r\n        <Container fluid>{this.renderEvents()}</Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  FloatingLabel,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createAdmin,\r\n  loginAdmin,\r\n} from \"../redux/actions/fetch/admin/admin.actions\";\r\nimport {\r\n  clearCreateAdminResponseMessage,\r\n  clearLoginAdminResponseMessage,\r\n  setCreateAdminRequestParams,\r\n  setLoginAdminRequestParams,\r\n} from \"../redux/actions/index.actions\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    createAdminRequest: state.fetch.admin.admin.createAdmin.request,\r\n    createAdminResponseLoading: state.fetch.admin.admin.createAdmin.loading,\r\n    createAdminResponse: state.fetch.admin.admin.createAdmin.response.data,\r\n    createAdminResponseMessage:\r\n      state.fetch.admin.admin.createAdmin.response.message,\r\n\r\n    loginAdminRequest: state.fetch.admin.admin.loginAdmin.request,\r\n    loginAdminResponseLoading: state.fetch.admin.admin.loginAdmin.loading,\r\n    loginAdminResponse: state.fetch.admin.admin.loginAdmin.response.data,\r\n    loginAdminResponseMessage:\r\n      state.fetch.admin.admin.loginAdmin.response.message,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n  invokeSetCreateAdminRequestParams(payload) {\r\n    dispatch(setCreateAdminRequestParams(payload));\r\n  },\r\n  invokeCreateAdmin(payload) {\r\n    dispatch(createAdmin(payload));\r\n  },\r\n  invokeClearCreateAdminResponseMessage() {\r\n    dispatch(clearCreateAdminResponseMessage());\r\n  },\r\n\r\n  invokeSetLoginAdminRequestParams(payload) {\r\n    dispatch(setLoginAdminRequestParams(payload));\r\n  },\r\n  invokeLoginAdmin(payload) {\r\n    dispatch(loginAdmin(payload));\r\n  },\r\n  invokeClearLoginAdminResponseMessage() {\r\n    dispatch(clearLoginAdminResponseMessage());\r\n  },\r\n});\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    isNewUser: true,\r\n  };\r\n\r\n  /**\r\n   * This method renders the back button\r\n   * @returns JSX\r\n   */\r\n  renderBack() {\r\n    return (\r\n      <div>\r\n        <p className=\"text-start text-muted font-monospace\">\r\n          <a href=\"/home\">Back</a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method handles error message rendering for create and login admin\r\n   * @returns JSX\r\n   */\r\n  renderError() {\r\n    const { isNewUser } = this.state;\r\n    const {\r\n      createAdminResponseMessage,\r\n      createAdminResponse,\r\n\r\n      loginAdminResponseMessage,\r\n      loginAdminResponse,\r\n\r\n      invokeClearCreateAdminResponseMessage,\r\n      invokeClearLoginAdminResponseMessage,\r\n    } = this.props;\r\n\r\n    //select params and methods based on the current mode (new or existing)\r\n    const responseMessage = isNewUser\r\n      ? createAdminResponseMessage\r\n      : loginAdminResponseMessage;\r\n    const response = isNewUser ? createAdminResponse : loginAdminResponse;\r\n    const invokeClearAction = isNewUser\r\n      ? invokeClearCreateAdminResponseMessage\r\n      : invokeClearLoginAdminResponseMessage;\r\n\r\n    //check if response message is an error\r\n    if (responseMessage && !response.username) {\r\n      //clear response message after 3 seconds\r\n      setTimeout(() => {\r\n        invokeClearAction();\r\n      }, 3000);\r\n\r\n      return (\r\n        <Alert key=\"danger\" variant=\"danger\">\r\n          {responseMessage}\r\n        </Alert>\r\n      );\r\n    }\r\n\r\n    return <></>;\r\n  }\r\n\r\n  /**\r\n   * This function renders the signup and login forms\r\n   * @returns JSX\r\n   */\r\n  renderForm = () => {\r\n    const {\r\n      createAdminRequest,\r\n      createAdminResponseLoading,\r\n      createAdminResponse,\r\n      createAdminResponseMessage,\r\n\r\n      loginAdminRequest,\r\n      loginAdminResponseLoading,\r\n      loginAdminResponse,\r\n      loginAdminResponseMessage,\r\n\r\n      invokeSetCreateAdminRequestParams,\r\n      invokeCreateAdmin,\r\n\r\n      invokeSetLoginAdminRequestParams,\r\n      invokeLoginAdmin,\r\n    } = this.props;\r\n    const { isNewUser } = this.state;\r\n\r\n    //select params and methods based on the current mode (new or existing)\r\n    const request = isNewUser ? createAdminRequest : loginAdminRequest;\r\n    const responseLoading = isNewUser\r\n      ? createAdminResponseLoading\r\n      : loginAdminResponseLoading;\r\n    const response = isNewUser ? createAdminResponse : loginAdminResponse;\r\n    const responseMessage = isNewUser\r\n      ? createAdminResponseMessage\r\n      : loginAdminResponseMessage;\r\n\r\n    const invokeSetParams = isNewUser\r\n      ? invokeSetCreateAdminRequestParams\r\n      : invokeSetLoginAdminRequestParams;\r\n    const invokeAction = isNewUser ? invokeCreateAdmin : invokeLoginAdmin;\r\n\r\n    return (\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n        <Card style={{ width: \"24rem\" }}>\r\n          <Card.Body>\r\n            <div className=\"mb-3\">\r\n              <div className=\"d-flex justify-content-end align-items-center\">\r\n                <span className=\"fs-6 me-3 text-muted\">\r\n                  {isNewUser\r\n                    ? \"Already have an account ? \"\r\n                    : \"Dont have an account ? \"}\r\n                </span>\r\n                <Button\r\n                  variant=\"info\"\r\n                  type=\"button\"\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    this.setState({ isNewUser: !isNewUser });\r\n                  }}\r\n                >\r\n                  {isNewUser ? \"Login\" : \"Create account\"}\r\n                </Button>\r\n              </div>\r\n\r\n              <h3 className=\"text-center mb-2\">\r\n                {isNewUser ? \"Create account\" : \"Login\"}\r\n              </h3>\r\n\r\n              {this.renderError()}\r\n            </div>\r\n\r\n            <Form>\r\n              <FloatingLabel\r\n                controlId=\"username\"\r\n                label=\"Username\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"e.g john_wick\"\r\n                  onChange={(e) => {\r\n                    const value = e.currentTarget.value;\r\n                    invokeSetParams({ username: value });\r\n                  }}\r\n                  value={request.username}\r\n                />\r\n              </FloatingLabel>\r\n\r\n              <FloatingLabel\r\n                controlId=\"password\"\r\n                label=\"Password\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"**********\"\r\n                  onChange={(e) => {\r\n                    const value = e.currentTarget.value;\r\n                    invokeSetParams({ password: value });\r\n                  }}\r\n                  value={request.password}\r\n                />\r\n              </FloatingLabel>\r\n\r\n              <FloatingLabel\r\n                controlId=\"name\"\r\n                label=\"Name\"\r\n                className=\"mb-3\"\r\n                hidden={!isNewUser}\r\n              >\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"e.g Adele Enoeasy\"\r\n                  onChange={(e) => {\r\n                    const value = e.currentTarget.value;\r\n                    invokeSetParams({ name: value });\r\n                  }}\r\n                  value={request.name ?? \"\"}\r\n                />\r\n              </FloatingLabel>\r\n\r\n              <FloatingLabel\r\n                controlId=\"email\"\r\n                label=\"Email address\"\r\n                className=\"mb-3\"\r\n                hidden={!isNewUser}\r\n              >\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"e.g shivers@edsheeran.music\"\r\n                  onChange={(e) => {\r\n                    const value = e.currentTarget.value;\r\n                    invokeSetParams({ email: value });\r\n                  }}\r\n                  value={request.email ?? \"\"}\r\n                />\r\n\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </FloatingLabel>\r\n\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                  invokeAction(request);\r\n                }}\r\n                disabled={responseLoading}\r\n              >\r\n                {responseLoading ? (\r\n                  <span>\r\n                    <span className=\"text-primary me-2\">Submitting</span>\r\n                    <Spinner animation=\"grow\" variant=\"primary\" size=\"sm\" />\r\n                  </span>\r\n                ) : (\r\n                  <span>Submit</span>\r\n                )}\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {} = this.props;\r\n    return (\r\n      <div className=\"content\">\r\n        <Container className=\"\">\r\n          {this.renderBack()}\r\n          {this.renderForm()}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import Home from \"views/Home.jsx\";\r\nimport Events from \"./views/Events\";\r\nimport Login from \"./views/Login\";\r\n\r\nconst unprotectedRoute = [\r\n  {\r\n    path: \"/home\",\r\n    name: \"\",\r\n    icon: \"\",\r\n    component: Home,\r\n    layout: \"\",\r\n    redirect: true,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"\",\r\n    icon: \"\",\r\n    component: Login,\r\n    layout: \"\",\r\n    redirect: true,\r\n  },\r\n];\r\n\r\nconst protectedRoutes = [\r\n  {\r\n    path: \"/home\",\r\n    name: \"Home\",\r\n    icon: \"pe-7s-home\",\r\n    component: Home,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/events\",\r\n    name: \"Events\",\r\n    icon: \"pe-7s-global\",\r\n    component: Events,\r\n    layout: \"\",\r\n  },\r\n];\r\n\r\nexport default [unprotectedRoute, protectedRoutes];\r\n","import imagine1 from \"assets/img/sidebar-1.jpg\";\r\nimport React from \"react\";\r\nimport NotificationSystem from \"react-notification-system\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport { clearAppError, clearAppSuccess } from \"../redux/actions/index.actions\";\r\nimport {\r\n  changeFixedClasses,\r\n  changeNotificationSystem,\r\n  changeSidebarBackgroundColor,\r\n  changeSidebarBackgroundImage,\r\n  restoreRootDefaultState,\r\n  toggleHasBackground\r\n} from \"../redux/actions/layout/layout.action\";\r\nimport AllRoutes from \"../routes.js\";\r\nimport { style } from \"../variables/Variables.jsx\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { root } = state.layout;\r\n  return {\r\n    _notificationSystem: root._notificationSystem,\r\n    image: root.image,\r\n    color: root.color,\r\n    hasImage: root.hasImage,\r\n    fixedClasses: root.fixedClasses,\r\n\r\n    authenticated: state.app.isAuthenticated,\r\n    error: state.app.error,\r\n    success: state.app.success,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeNotificationSystem(notificationSystem) {\r\n    dispatch(changeNotificationSystem(notificationSystem));\r\n  },\r\n  onChangeSidebarBackgroundImage(image) {\r\n    dispatch(changeSidebarBackgroundImage(image));\r\n  },\r\n  onChangeSidebarBackgroundColor(color) {\r\n    dispatch(changeSidebarBackgroundColor(color));\r\n  },\r\n  onToggleHasBackground(hasBackground) {\r\n    dispatch(toggleHasBackground(hasBackground));\r\n  },\r\n  onChangeFixedClasses(classes) {\r\n    dispatch(changeFixedClasses(classes));\r\n  },\r\n  onRestoreRootDefaultState() {\r\n    dispatch(restoreRootDefaultState());\r\n  },\r\n\r\n  invokeClearSuccess() {\r\n    dispatch(clearAppSuccess());\r\n  },\r\n  invokeClearError() {\r\n    dispatch(clearAppError());\r\n  },\r\n});\r\n\r\nexport class Admin extends React.Component {\r\n  /**\r\n   * @param position tr,tc,tl,br,bc,bl\r\n   * @param message message,\r\n   * @param level success, warning, error, info\r\n   */\r\n  handleNotificationClick = (\r\n    position = \"tr\",\r\n    message = \"Notifying you to wash your hands and stay safe\",\r\n    level = \"info\"\r\n  ) => {\r\n    // var color = Math.floor(Math.random() * 4 + 1);\r\n    // var level;\r\n    // switch (color) {\r\n    //   case 1:\r\n    //     level = \"success\";\r\n    //     break;\r\n    //   case 2:\r\n    //     level = \"warning\";\r\n    //     break;\r\n    //   case 3:\r\n    //     level = \"error\";\r\n    //     break;\r\n    //   case 4:\r\n    //     level = \"info\";\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n\r\n    this.props._notificationSystem.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n      message: <div>{message}.</div>,\r\n      level: level,\r\n      position: position,\r\n      autoDismiss: 5,\r\n    });\r\n  };\r\n\r\n  getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={(props) => (\r\n              <prop.component\r\n                {...props}\r\n                handleSuccess={this.handleSuccess}\r\n                handleError={this.handleError}\r\n                handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  getBrandText = (routes, path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n\r\n  handleImageClick = (image) => {\r\n    this.props.onChangeSidebarBackgroundImage(image);\r\n  };\r\n\r\n  handleColorClick = (color) => {\r\n    this.props.onChangeSidebarBackgroundColor(color);\r\n  };\r\n\r\n  handleHasImage = (hasImage) => {\r\n    this.props.onToggleHasBackground(hasImage);\r\n  };\r\n\r\n  handleFixedClick = () => {\r\n    if (this.props.fixedClasses === \"dropdown\") {\r\n      this.props.onChangeFixedClasses(\"dropdown show-dropdown open\");\r\n    } else {\r\n      this.props.onChangeFixedClasses(\"dropdown\");\r\n    }\r\n  };\r\n\r\n  handleSuccess = (success) => {\r\n    const _notificationSystem = this.refs.notificationSystem;\r\n    const level = \"success\";\r\n\r\n    _notificationSystem.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"fa fa-success\" />,\r\n      message: <div>{success}</div>,\r\n      level: level,\r\n      position: \"tr\",\r\n      autoDismiss: 5,\r\n      onAdd: (notification) => {\r\n        this.props.invokeClearSuccess();\r\n      },\r\n    });\r\n  };\r\n\r\n  handleError = (error) => {\r\n    const _notificationSystem = this.refs.notificationSystem;\r\n    const level = \"error\";\r\n\r\n    _notificationSystem.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"fa fa-danger\" />,\r\n      message: <div>{error}</div>,\r\n      level: level,\r\n      position: \"br\",\r\n      autoDismiss: 5,\r\n      onAdd: (notification) => {\r\n        this.props.invokeClearError();\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onChangeNotificationSystem(this.refs.notificationSystem);\r\n\r\n    this.props.onChangeSidebarBackgroundImage(\"assets/img/sidebar-3.jpg\");\r\n    this.props.onChangeSidebarBackgroundColor(\"orange\");\r\n  }\r\n\r\n  componentDidUpdate(e) {\r\n    const { success, error } = this.props;\r\n    success && this.handleSuccess(success);\r\n    error && this.handleError(error);\r\n\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const [unprotectedRoutes, protectedRoutes] = AllRoutes;\r\n    const { authenticated, image, color, hasImage } = this.props;\r\n\r\n    const routes = authenticated ? protectedRoutes : unprotectedRoutes;\r\n    const redirect = authenticated ? \"/events\" : \"/home\";\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          image={imagine1}\r\n          color={color}\r\n          hasImage={hasImage}\r\n        />\r\n\r\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Redirect from=\"/\" to={redirect} />\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","import ReduxConstants from \"../../constants/index.constants\";\r\n\r\nexport const changeNotificationSystem = (notificationSystem) => ({\r\n  type: ReduxConstants.layout.CHANGE_NOTIFICATION_SYSTEM,\r\n  payload: notificationSystem,\r\n});\r\n\r\nexport const changeSidebarBackgroundImage = (image) => ({\r\n  type: ReduxConstants.layout.CHANGE_SIDEBAR_BACKGROUND_IMAGE,\r\n  payload: image,\r\n});\r\n\r\nexport const changeSidebarBackgroundColor = (color) => ({\r\n  type: ReduxConstants.layout.CHANGE_SIDEBAR_BACKGROUND_COLOR,\r\n  payload: color,\r\n});\r\n\r\nexport const toggleHasBackground = (hasBackground) => ({\r\n  type: ReduxConstants.layout.TOGGLE_SIDEBAR_HAS_BACKGROUND_IMAGE,\r\n  payload: hasBackground,\r\n});\r\n\r\nexport const changeFixedClasses = (classes) => ({\r\n  type: ReduxConstants.layout.CHANGE_FIXED_CLASSESS,\r\n  payload: classes,\r\n});\r\n\r\nexport const restoreRootDefaultState = () => ({\r\n  type: ReduxConstants.layout.RESTORE_ROOT_DEFAULT_STATE,\r\n});\r\n","import { logoutLocaly } from \"../actions/index.actions\";\r\nimport ReduxConstants from \"../constants/index.constants\";\r\n\r\n/**\r\n * This middleware hangles logout of admins with invalid authentication token\r\n * @param {*} store\r\n * @returns\r\n */\r\nexport const autoLogout = (store) => (next) => (action) => {\r\n  if (\r\n    typeof action.payload === \"string\" &&\r\n    action.payload.toLowerCase == \"invalid request\"\r\n  ) {\r\n    store.dispatch(logoutLocaly());\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nexport default autoLogout;\r\n","import { setAuthState } from \"../actions/index.actions\";\r\nimport ReduxConstants from \"../constants/index.constants\";\r\n\r\n/**\r\n * This middleware handles authentication state persistence sychng to state\r\n * @param {*} store\r\n * @returns Response\r\n */\r\nexport const syncAuthState = (store) => (next) => (action) => {\r\n  const state = store.getState();\r\n  const authed = localStorage.getItem(\"figfin-authed\") ?? null;\r\n  const authToken = localStorage.getItem(\"figfin-token\") ?? null;\r\n\r\n  // sych authentication status from localstorage to redux state\r\n  if (\r\n    action.type != ReduxConstants.app.SET_AUTHENTICATED &&\r\n    !state.app.isAuthenticated &&\r\n    authed == \"true\" &&\r\n    authToken\r\n  ) {\r\n    store.dispatch(setAuthState());\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nexport default syncAuthState;\r\n","import thunk from \"redux-thunk\";\r\nimport { autoLogout } from \"./autoLogout\";\r\nimport { syncAuthState } from \"./syncAuthState\";\r\n\r\nexport const Middlewares = [\r\n  thunk,\r\n  syncAuthState,\r\n  autoLogout,\r\n];\r\n\r\nexport default Middlewares;\r\n","import { combineReducers } from \"redux\";\r\nimport ReduxConstants from \"../../../constants/index.constants\";\r\n\r\nconst createAdminInitialState = {\r\n  request: {\r\n    username: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n  },\r\n  response: {\r\n    message: \"\",\r\n    data: {\r\n      id: \"\",\r\n      autoID: null,\r\n      username: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n    },\r\n  },\r\n  loading: false,\r\n};\r\nconst createAdmin = (state = createAdminInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.createAdmin.SET_REQUEST_PARAMS:\r\n      return { ...state, request: { ...state.request, ...action.payload } };\r\n\r\n    case ReduxConstants.fetch.admin.createAdmin.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.createAdmin.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.createAdmin.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        request: createAdminInitialState.request,\r\n        response: action.payload,\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.createAdmin.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: createAdminInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.createAdmin.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: createAdminInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loginAdminInitialState = {\r\n  request: {\r\n    username: \"\",\r\n    password: \"\",\r\n  },\r\n  response: {\r\n    message: \"\",\r\n    data: {\r\n      id: \"\",\r\n      autoID: null,\r\n      username: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n    },\r\n  },\r\n  loading: false,\r\n};\r\nconst loginAdmin = (state = loginAdminInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.loginAdmin.SET_REQUEST_PARAMS:\r\n      return { ...state, request: { ...state.request, ...action.payload } };\r\n\r\n    case ReduxConstants.fetch.admin.loginAdmin.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.loginAdmin.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.loginAdmin.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        request: loginAdminInitialState.request,\r\n        response: action.payload,\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.loginAdmin.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: loginAdminInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.loginAdmin.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: loginAdminInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getAdminInitialState = {\r\n  request: null,\r\n  response: {\r\n    message: \"\",\r\n    data: {\r\n      id: \"\",\r\n      autoID: null,\r\n      username: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n    },\r\n  },\r\n  loading: false,\r\n};\r\nconst getAdmin = (state = getAdminInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.getAdmin.SET_REQUEST_PARAMS:\r\n      return { ...state, request: null };\r\n\r\n    case ReduxConstants.fetch.admin.getAdmin.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.getAdmin.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.getAdmin.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.getAdmin.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: getAdminInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.getAdmin.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: getAdminInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst logoutAdminInitialState = {\r\n  request: null,\r\n  response: {\r\n    message: \"\",\r\n    data: null,\r\n  },\r\n  loading: false,\r\n};\r\nconst logoutAdmin = (state = logoutAdminInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.logoutAdmin.SET_REQUEST_PARAMS:\r\n      return { ...state, request: null };\r\n\r\n    case ReduxConstants.fetch.admin.logoutAdmin.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.logoutAdmin.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.logoutAdmin.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.logoutAdmin.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: logoutAdminInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.logoutAdmin.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: logoutAdminInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst adminAdminReducer = combineReducers({\r\n  createAdmin,\r\n  loginAdmin,\r\n  getAdmin,\r\n  logoutAdmin,\r\n});\r\n\r\nexport default adminAdminReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport ReduxConstants from \"../../../constants/index.constants\";\r\n\r\nconst createEventInitialState = {\r\n  request: {\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    date: \"\",\r\n    isVirtual: false,\r\n    address: \"\",\r\n  },\r\n  response: {\r\n    message: \"\",\r\n    data: {\r\n      _id: \"\",\r\n      adminID: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      category: \"\",\r\n      date: \"\",\r\n      isVirtual: false,\r\n      address: \"\",\r\n      createdAt: \"\",\r\n      updatedAt: \"\",\r\n    },\r\n  },\r\n  loading: false,\r\n};\r\nconst createEvent = (state = createEventInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.event.createEvent.SET_REQUEST_PARAMS:\r\n      return { ...state, request: { ...state.request, ...action.payload } };\r\n\r\n    case ReduxConstants.fetch.admin.event.createEvent.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.event.createEvent.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.event.createEvent.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        request: createEventInitialState.request,\r\n        response: action.payload,\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.event.createEvent.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: createEventInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.event.createEvent.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: createEventInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getEventsInitialState = {\r\n  request: null,\r\n  response: {\r\n    message: \"\",\r\n    data: [],\r\n  },\r\n  loading: false,\r\n};\r\nconst getEvents = (state = getEventsInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.event.getEvents.SET_REQUEST_PARAMS:\r\n      return { ...state, request: null };\r\n\r\n    case ReduxConstants.fetch.admin.event.getEvents.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.event.getEvents.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.event.getEvents.LOAD_SUCCESS:\r\n      return { ...state, response: action.payload };\r\n\r\n    case ReduxConstants.fetch.admin.event.getEvents.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: getEventsInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.event.getEvents.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: getEventsInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst updateEventInitialState = {\r\n  request: {\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    date: \"\",\r\n    isVirtual: false,\r\n    address: \"\",\r\n  },\r\n  response: {\r\n    message: \"\",\r\n    data: {\r\n      _id: \"\",\r\n      adminID: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      category: \"\",\r\n      date: \"\",\r\n      isVirtual: false,\r\n      address: \"\",\r\n      createdAt: \"\",\r\n      updatedAt: \"\",\r\n    },\r\n  },\r\n  loading: false,\r\n};\r\nconst updateEvent = (state = updateEventInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.event.updateEvent.SET_REQUEST_PARAMS:\r\n      return { ...state, request: { ...state.request, ...action.payload } };\r\n\r\n    case ReduxConstants.fetch.admin.event.updateEvent.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.event.updateEvent.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.event.updateEvent.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        request: updateEventInitialState.request,\r\n        response: action.payload,\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.event.updateEvent.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: updateEventInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.event.updateEvent.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: updateEventInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst deleteEventInitialState = {\r\n  request: null,\r\n  response: {\r\n    message: \"\",\r\n    data: {\r\n      _id: \"\",\r\n      adminID: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      category: \"\",\r\n      date: \"\",\r\n      isVirtual: false,\r\n      address: \"\",\r\n      createdAt: \"\",\r\n      updatedAt: \"\",\r\n    },\r\n  },\r\n  loading: false,\r\n};\r\nconst deleteEvent = (state = deleteEventInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.admin.event.deleteEvent.SET_REQUEST_PARAMS:\r\n      return { ...state, request: null };\r\n\r\n    case ReduxConstants.fetch.admin.event.deleteEvent.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.admin.event.deleteEvent.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.admin.event.deleteEvent.LOAD_SUCCESS:\r\n      return { ...state, response: action.payload };\r\n\r\n    case ReduxConstants.fetch.admin.event.deleteEvent.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: deleteEventInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.admin.event.deleteEvent.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: deleteEventInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst adminEventReducer = combineReducers({\r\n  createEvent,\r\n  getEvents,\r\n  updateEvent,\r\n  deleteEvent,\r\n});\r\n\r\nexport default adminEventReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport adminAdminReducer from \"./admin.reducer\";\r\nimport adminEventReducer from \"./event.admin.reducer\";\r\n\r\nconst adminReducer = combineReducers({\r\n  admin: adminAdminReducer,\r\n  event: adminEventReducer,\r\n});\r\n\r\nexport default adminReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport ReduxConstants from \"../../../constants/index.constants\";\r\n\r\nconst searchEventInitialState = {\r\n  request: {\r\n    title: \"\",\r\n    categories: null,\r\n    dateRange: {\r\n      from: null,\r\n      to: null,\r\n    },\r\n    isVirtual: null,\r\n    address: \"\",\r\n  },\r\n  response: {\r\n    message: \"\",\r\n    data: [],\r\n  },\r\n  loading: false,\r\n};\r\nconst searchEvent = (state = searchEventInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.event.searchEvent.SET_REQUEST_PARAMS:\r\n      return { ...state, request: { ...state.request, ...action.payload } };\r\n\r\n    case ReduxConstants.fetch.event.searchEvent.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.event.searchEvent.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.event.searchEvent.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n      };\r\n\r\n    case ReduxConstants.fetch.event.searchEvent.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: searchEventInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.event.searchEvent.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: searchEventInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getEventCategoriesInitialState = {\r\n  request: null,\r\n  response: {\r\n    message: \"\",\r\n    data: [],\r\n  },\r\n  loading: false,\r\n};\r\nconst getEventCategories = (state = getEventCategoriesInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.fetch.event.getEventCategories.SET_REQUEST_PARAMS:\r\n      return { ...state, request: null };\r\n\r\n    case ReduxConstants.fetch.event.getEventCategories.LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case ReduxConstants.fetch.event.getEventCategories.LOADED:\r\n      return { ...state, loading: false };\r\n\r\n    case ReduxConstants.fetch.event.getEventCategories.LOAD_SUCCESS:\r\n      return { ...state, response: action.payload };\r\n\r\n    case ReduxConstants.fetch.event.getEventCategories.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          data: getEventCategoriesInitialState.response.data,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ReduxConstants.fetch.event.getEventCategories.CLEAR_RESPONSE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        response: {\r\n          ...state.response,\r\n          message: getEventCategoriesInitialState.response.message,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userEventReducer = combineReducers({ searchEvent, getEventCategories });\r\n\r\nexport default userEventReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userEventReducer from \"./event.user.reducer\";\r\n\r\nconst userReducer = combineReducers({\r\n  event: userEventReducer,\r\n});\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport adminReducer from \"./admin/index.admin.reducer\";\r\nimport userReducer from \"./user/index.user.reducer\";\r\n\r\nconst fetchReducer = combineReducers({\r\n  admin: adminReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default fetchReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport ReduxConstants from \"../../constants/index.constants\";\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nconst root = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.CHANGE_NOTIFICATION_SYSTEM:\r\n      return { ...state, _notificationSystem: action.payload };\r\n\r\n    case ReduxConstants.CHANGE_SIDEBAR_BACKGROUND_IMAGE:\r\n      return { ...state, image: action.payload };\r\n\r\n    case ReduxConstants.CHANGE_SIDEBAR_BACKGROUND_COLOR:\r\n      return { ...state, color: action.payload };\r\n\r\n    case ReduxConstants.TOGGLE_SIDEBAR_HAS_BACKGROUND_IMAGE:\r\n      return { ...state, hasImage: action.payload };\r\n\r\n    case ReduxConstants.CHANGE_FIXED_CLASSESS:\r\n      return { ...state, fixedClasses: action.payload };\r\n\r\n    case ReduxConstants.RESTORE_ROOT_DEFAULT_STATE:\r\n      return {\r\n        ...state,\r\n        _notificationSystem: null,\r\n        image: \"assets/img/sidebar-3.jpg\",\r\n        color: \"black\",\r\n        hasImage: true,\r\n        fixedClasses: \"dropdown show-dropdown open\"\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const layoutReducer = combineReducers({\r\n  root\r\n});\r\n\r\nexport default layoutReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport ReduxConstants from \"../constants/index.constants\";\r\nimport fetchReducer from \"./fetch/index.fetch.reducer\";\r\nimport layoutReducer from \"./layout/layout.reducer\";\r\n\r\nconst appInitialState = {\r\n  isAuthenticated: false,\r\n  error: \"\",\r\n  success: \"\",\r\n};\r\nconst app = (state = appInitialState, action) => {\r\n  switch (action.type) {\r\n    case ReduxConstants.app.SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n\r\n    case ReduxConstants.app.UNSET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    case ReduxConstants.app.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case ReduxConstants.app.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n\r\n    case ReduxConstants.app.SET_SUSSESS:\r\n      return {\r\n        ...state,\r\n        sussess: action.payload,\r\n      };\r\n    case ReduxConstants.app.CLEAR_SUSSESS:\r\n      return {\r\n        ...state,\r\n        sussess: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst appReducer = combineReducers({\r\n  app,\r\n  fetch: fetchReducer,\r\n  layout: layoutReducer,\r\n});\r\n\r\nexport default appReducer;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\r\nimport AdminLayout from \"./layouts/index.jsx\";\r\nimport { setAppError } from \"./redux/actions/index.actions\";\r\nimport storeFactory from \"./redux/store\";\r\n\r\n\r\nconst handleError = (error) => {\r\n  store.dispatch(setAppError(error.message));\r\n};\r\n\r\nconst store = storeFactory();\r\n\r\nwindow.React = React;\r\nwindow.store = store;\r\n\r\nwindow.addEventListener(\"error\", handleError);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename=\"\">\r\n      <Switch>\r\n        <Route render={(props) => <AdminLayout {...props} />} />\r\n\r\n        {/* <Redirect from=\"/\" to=\"/dashboard\" /> */}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { Middlewares } from \"../middlewares\";\r\nimport appReducer from \"../reducers/index.reducer\";\r\n\r\nexport default () => {\r\n  return applyMiddleware(...Middlewares)(createStore)(appReducer);\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-1.6be21e8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.6d362a8d.png\";","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n//\r\n// //\r\n// // // For notifications\r\n// //\r\n//\r\nvar defaultWidth =\r\n  window.screen.width > 768\r\n    ? (window.screen.width * 1) / 3\r\n    : window.screen.width;\r\n\r\nvar style = {\r\n  Wrapper: {},\r\n  Containers: {\r\n    DefaultStyle: {\r\n      position: \"fixed\",\r\n      width: defaultWidth,\r\n      padding: \"10px 10px 10px 20px\",\r\n      zIndex: 9998,\r\n      WebkitBoxSizing: \"\",\r\n      MozBoxSizing: \"\",\r\n      boxSizing: \"\",\r\n      height: \"auto\",\r\n      display: \"inline-block\",\r\n      border: \"0\",\r\n      fontSize: \"14px\",\r\n      WebkitFontSmoothing: \"antialiased\",\r\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\r\n      fontWeight: \"400\",\r\n      color: \"#FFFFFF\"\r\n    },\r\n\r\n    tl: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    tr: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    tc: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    },\r\n\r\n    bl: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    br: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    bc: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    }\r\n  },\r\n\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      margin: \"10px 0 0\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      WebkitBoxSizing: \"border-box\",\r\n      MozBoxSizing: \"border-box\",\r\n      boxSizing: \"border-box\",\r\n      opacity: 0,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      WebkitTransform: \"translate3d(0, 0, 0)\",\r\n      transform: \"translate3d(0, 0, 0)\",\r\n      willChange: \"transform, opacity\",\r\n\r\n      isHidden: {\r\n        opacity: 0\r\n      },\r\n\r\n      isVisible: {\r\n        opacity: 1\r\n      }\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#a1e82c\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#fc727a\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#ffbc67\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#63d8f1\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    }\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      fontSize: \"30px\",\r\n      margin: \"0\",\r\n      padding: 0,\r\n      fontWeight: \"bold\",\r\n      color: \"#FFFFFF\",\r\n      display: \"block\",\r\n      left: \"15px\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      marginTop: \"-15px\"\r\n    }\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      marginLeft: \"55px\",\r\n      marginRight: \"30px\",\r\n      padding: \"0 12px 0 0\",\r\n      color: \"#FFFFFF\",\r\n      maxWidthwidth: \"89%\"\r\n    }\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      fontFamily: \"inherit\",\r\n      fontSize: \"21px\",\r\n      color: \"#000\",\r\n      float: \"right\",\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"50%\",\r\n      marginTop: \"-13px\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      display: \"block\",\r\n      borderRadius: \"50%\",\r\n      opacity: \".4\",\r\n      lineHeight: \"11px\",\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      outline: \"0 !important\",\r\n      textAlign: \"center\",\r\n      padding: \"6px 3px 3px 3px\",\r\n      fontWeight: \"300\",\r\n      marginLeft: \"65px\"\r\n    },\r\n\r\n    success: {\r\n      // color: '#f0f5ea',\r\n      // backgroundColor: '#a1e82c'\r\n    },\r\n\r\n    error: {\r\n      // color: '#f4e9e9',\r\n      // backgroundColor: '#fc727a'\r\n    },\r\n\r\n    warning: {\r\n      // color: '#f9f6f0',\r\n      // backgroundColor: '#ffbc67'\r\n    },\r\n\r\n    info: {\r\n      // color: '#e8f0f4',\r\n      // backgroundColor: '#63d8f1'\r\n    }\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: \"#ffffff\",\r\n      borderRadius: \"2px\",\r\n      padding: \"6px 20px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"10px 0 0 0\",\r\n      border: 0\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: \"#a1e82c\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: \"#fc727a\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: \"#ffbc67\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: \"#63d8f1\",\r\n      color: \"#ffffff\"\r\n    }\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n// //\r\n// // // For tables\r\n// //\r\n//\r\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\r\nconst tdArray = [\r\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\r\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\r\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\r\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\r\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\r\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\r\n];\r\n\r\n//\r\n// //\r\n// // // For icons\r\n// //\r\n//\r\nconst iconsArray = [\r\n  \"pe-7s-album\",\r\n  \"pe-7s-arc\",\r\n  \"pe-7s-back-2\",\r\n  \"pe-7s-bandaid\",\r\n  \"pe-7s-car\",\r\n  \"pe-7s-diamond\",\r\n  \"pe-7s-door-lock\",\r\n  \"pe-7s-eyedropper\",\r\n  \"pe-7s-female\",\r\n  \"pe-7s-gym\",\r\n  \"pe-7s-hammer\",\r\n  \"pe-7s-headphones\",\r\n  \"pe-7s-helm\",\r\n  \"pe-7s-hourglass\",\r\n  \"pe-7s-leaf\",\r\n  \"pe-7s-magic-wand\",\r\n  \"pe-7s-male\",\r\n  \"pe-7s-map-2\",\r\n  \"pe-7s-next-2\",\r\n  \"pe-7s-paint-bucket\",\r\n  \"pe-7s-pendrive\",\r\n  \"pe-7s-photo\",\r\n  \"pe-7s-piggy\",\r\n  \"pe-7s-plugin\",\r\n  \"pe-7s-refresh-2\",\r\n  \"pe-7s-rocket\",\r\n  \"pe-7s-settings\",\r\n  \"pe-7s-shield\",\r\n  \"pe-7s-smile\",\r\n  \"pe-7s-usb\",\r\n  \"pe-7s-vector\",\r\n  \"pe-7s-wine\",\r\n  \"pe-7s-cloud-upload\",\r\n  \"pe-7s-cash\",\r\n  \"pe-7s-close\",\r\n  \"pe-7s-bluetooth\",\r\n  \"pe-7s-cloud-download\",\r\n  \"pe-7s-way\",\r\n  \"pe-7s-close-circle\",\r\n  \"pe-7s-id\",\r\n  \"pe-7s-angle-up\",\r\n  \"pe-7s-wristwatch\",\r\n  \"pe-7s-angle-up-circle\",\r\n  \"pe-7s-world\",\r\n  \"pe-7s-angle-right\",\r\n  \"pe-7s-volume\",\r\n  \"pe-7s-angle-right-circle\",\r\n  \"pe-7s-users\",\r\n  \"pe-7s-angle-left\",\r\n  \"pe-7s-user-female\",\r\n  \"pe-7s-angle-left-circle\",\r\n  \"pe-7s-up-arrow\",\r\n  \"pe-7s-angle-down\",\r\n  \"pe-7s-switch\",\r\n  \"pe-7s-angle-down-circle\",\r\n  \"pe-7s-scissors\",\r\n  \"pe-7s-wallet\",\r\n  \"pe-7s-safe\",\r\n  \"pe-7s-volume2\",\r\n  \"pe-7s-volume1\",\r\n  \"pe-7s-voicemail\",\r\n  \"pe-7s-video\",\r\n  \"pe-7s-user\",\r\n  \"pe-7s-upload\",\r\n  \"pe-7s-unlock\",\r\n  \"pe-7s-umbrella\",\r\n  \"pe-7s-trash\",\r\n  \"pe-7s-tools\",\r\n  \"pe-7s-timer\",\r\n  \"pe-7s-ticket\",\r\n  \"pe-7s-target\",\r\n  \"pe-7s-sun\",\r\n  \"pe-7s-study\",\r\n  \"pe-7s-stopwatch\",\r\n  \"pe-7s-star\",\r\n  \"pe-7s-speaker\",\r\n  \"pe-7s-signal\",\r\n  \"pe-7s-shuffle\",\r\n  \"pe-7s-shopbag\",\r\n  \"pe-7s-share\",\r\n  \"pe-7s-server\",\r\n  \"pe-7s-search\",\r\n  \"pe-7s-film\",\r\n  \"pe-7s-science\",\r\n  \"pe-7s-disk\",\r\n  \"pe-7s-ribbon\",\r\n  \"pe-7s-repeat\",\r\n  \"pe-7s-refresh\",\r\n  \"pe-7s-add-user\",\r\n  \"pe-7s-refresh-cloud\",\r\n  \"pe-7s-paperclip\",\r\n  \"pe-7s-radio\",\r\n  \"pe-7s-note2\",\r\n  \"pe-7s-print\",\r\n  \"pe-7s-network\",\r\n  \"pe-7s-prev\",\r\n  \"pe-7s-mute\",\r\n  \"pe-7s-power\",\r\n  \"pe-7s-medal\",\r\n  \"pe-7s-portfolio\",\r\n  \"pe-7s-like2\",\r\n  \"pe-7s-plus\",\r\n  \"pe-7s-left-arrow\",\r\n  \"pe-7s-play\",\r\n  \"pe-7s-key\",\r\n  \"pe-7s-plane\",\r\n  \"pe-7s-joy\",\r\n  \"pe-7s-photo-gallery\",\r\n  \"pe-7s-pin\",\r\n  \"pe-7s-phone\",\r\n  \"pe-7s-plug\",\r\n  \"pe-7s-pen\",\r\n  \"pe-7s-right-arrow\",\r\n  \"pe-7s-paper-plane\",\r\n  \"pe-7s-delete-user\",\r\n  \"pe-7s-paint\",\r\n  \"pe-7s-bottom-arrow\",\r\n  \"pe-7s-notebook\",\r\n  \"pe-7s-note\",\r\n  \"pe-7s-next\",\r\n  \"pe-7s-news-paper\",\r\n  \"pe-7s-musiclist\",\r\n  \"pe-7s-music\",\r\n  \"pe-7s-mouse\",\r\n  \"pe-7s-more\",\r\n  \"pe-7s-moon\",\r\n  \"pe-7s-monitor\",\r\n  \"pe-7s-micro\",\r\n  \"pe-7s-menu\",\r\n  \"pe-7s-map\",\r\n  \"pe-7s-map-marker\",\r\n  \"pe-7s-mail\",\r\n  \"pe-7s-mail-open\",\r\n  \"pe-7s-mail-open-file\",\r\n  \"pe-7s-magnet\",\r\n  \"pe-7s-loop\",\r\n  \"pe-7s-look\",\r\n  \"pe-7s-lock\",\r\n  \"pe-7s-lintern\",\r\n  \"pe-7s-link\",\r\n  \"pe-7s-like\",\r\n  \"pe-7s-light\",\r\n  \"pe-7s-less\",\r\n  \"pe-7s-keypad\",\r\n  \"pe-7s-junk\",\r\n  \"pe-7s-info\",\r\n  \"pe-7s-home\",\r\n  \"pe-7s-help2\",\r\n  \"pe-7s-help1\",\r\n  \"pe-7s-graph3\",\r\n  \"pe-7s-graph2\",\r\n  \"pe-7s-graph1\",\r\n  \"pe-7s-graph\",\r\n  \"pe-7s-global\",\r\n  \"pe-7s-gleam\",\r\n  \"pe-7s-glasses\",\r\n  \"pe-7s-gift\",\r\n  \"pe-7s-folder\",\r\n  \"pe-7s-flag\",\r\n  \"pe-7s-filter\",\r\n  \"pe-7s-file\",\r\n  \"pe-7s-expand1\",\r\n  \"pe-7s-exapnd2\",\r\n  \"pe-7s-edit\",\r\n  \"pe-7s-drop\",\r\n  \"pe-7s-drawer\",\r\n  \"pe-7s-download\",\r\n  \"pe-7s-display2\",\r\n  \"pe-7s-display1\",\r\n  \"pe-7s-diskette\",\r\n  \"pe-7s-date\",\r\n  \"pe-7s-cup\",\r\n  \"pe-7s-culture\",\r\n  \"pe-7s-crop\",\r\n  \"pe-7s-credit\",\r\n  \"pe-7s-copy-file\",\r\n  \"pe-7s-config\",\r\n  \"pe-7s-compass\",\r\n  \"pe-7s-comment\",\r\n  \"pe-7s-coffee\",\r\n  \"pe-7s-cloud\",\r\n  \"pe-7s-clock\",\r\n  \"pe-7s-check\",\r\n  \"pe-7s-chat\",\r\n  \"pe-7s-cart\",\r\n  \"pe-7s-camera\",\r\n  \"pe-7s-call\",\r\n  \"pe-7s-calculator\",\r\n  \"pe-7s-browser\",\r\n  \"pe-7s-box2\",\r\n  \"pe-7s-box1\",\r\n  \"pe-7s-bookmarks\",\r\n  \"pe-7s-bicycle\",\r\n  \"pe-7s-bell\",\r\n  \"pe-7s-battery\",\r\n  \"pe-7s-ball\",\r\n  \"pe-7s-back\",\r\n  \"pe-7s-attention\",\r\n  \"pe-7s-anchor\",\r\n  \"pe-7s-albums\",\r\n  \"pe-7s-alarm\",\r\n  \"pe-7s-airplay\"\r\n];\r\n\r\n//\r\n// //\r\n// // // // For dashboard's charts\r\n// //\r\n//\r\n// Data for Pie Chart\r\nvar dataPie = {\r\n  labels: [\"40%\", \"20%\", \"40%\"],\r\n  series: [40, 20, 40]\r\n};\r\nvar legendPie = {\r\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Line Chart\r\nvar dataSales = {\r\n  labels: [\r\n    \"9:00AM\",\r\n    \"12:00AM\",\r\n    \"3:00PM\",\r\n    \"6:00PM\",\r\n    \"9:00PM\",\r\n    \"12:00PM\",\r\n    \"3:00AM\",\r\n    \"6:00AM\"\r\n  ],\r\n  series: [\r\n    [287, 385, 490, 492, 554, 586, 698, 695],\r\n    [67, 152, 143, 240, 287, 335, 435, 437],\r\n    [23, 113, 67, 108, 190, 239, 307, 308]\r\n  ]\r\n};\r\nvar optionsSales = {\r\n  low: 0,\r\n  high: 800,\r\n  showArea: false,\r\n  height: \"245px\",\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  lineSmooth: true,\r\n  showLine: true,\r\n  showPoint: true,\r\n  fullWidth: true,\r\n  chartPadding: {\r\n    right: 50\r\n  }\r\n};\r\nvar responsiveSales = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendSales = {\r\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Bar Chart\r\nvar dataBar = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  series: [\r\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\r\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\r\n  ]\r\n};\r\nvar optionsBar = {\r\n  seriesBarDistance: 10,\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  height: \"245px\"\r\n};\r\nvar responsiveBar = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      seriesBarDistance: 5,\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendBar = {\r\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\r\n  types: [\"info\", \"danger\"]\r\n};\r\n\r\nmodule.exports = {\r\n  style, // For notifications (App container and Notifications view)\r\n  thArray,\r\n  tdArray, // For tables (TableList view)\r\n  iconsArray, // For icons (Icons view)\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar // For charts (Dashboard view)\r\n};\r\n"],"sourceRoot":""}